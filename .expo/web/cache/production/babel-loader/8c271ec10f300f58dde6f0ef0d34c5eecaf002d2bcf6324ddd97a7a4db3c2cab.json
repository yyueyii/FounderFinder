{"ast":null,"code":"import _createForOfIteratorHelperLoose from\"@babel/runtime/helpers/createForOfIteratorHelperLoose\";import invariant from'fbjs/lib/invariant';export default class ChildListCollection{constructor(){this._cellKeyToChildren=new Map();this._childrenToCellKey=new Map();}add(list,cellKey){var _this$_cellKeyToChild;invariant(!this._childrenToCellKey.has(list),'Trying to add already present child list');var cellLists=(_this$_cellKeyToChild=this._cellKeyToChildren.get(cellKey))!==null&&_this$_cellKeyToChild!==void 0?_this$_cellKeyToChild:new Set();cellLists.add(list);this._cellKeyToChildren.set(cellKey,cellLists);this._childrenToCellKey.set(list,cellKey);}remove(list){var cellKey=this._childrenToCellKey.get(list);invariant(cellKey!=null,'Trying to remove non-present child list');this._childrenToCellKey.delete(list);var cellLists=this._cellKeyToChildren.get(cellKey);invariant(cellLists,'_cellKeyToChildren should contain cellKey');cellLists.delete(list);if(cellLists.size===0){this._cellKeyToChildren.delete(cellKey);}}forEach(fn){for(var _iterator=_createForOfIteratorHelperLoose(this._cellKeyToChildren.values()),_step;!(_step=_iterator()).done;){var listSet=_step.value;for(var _iterator2=_createForOfIteratorHelperLoose(listSet),_step2;!(_step2=_iterator2()).done;){var list=_step2.value;fn(list);}}}forEachInCell(cellKey,fn){var _this$_cellKeyToChild2;var listSet=(_this$_cellKeyToChild2=this._cellKeyToChildren.get(cellKey))!==null&&_this$_cellKeyToChild2!==void 0?_this$_cellKeyToChild2:[];for(var _iterator3=_createForOfIteratorHelperLoose(listSet),_step3;!(_step3=_iterator3()).done;){var list=_step3.value;fn(list);}}anyInCell(cellKey,fn){var _this$_cellKeyToChild3;var listSet=(_this$_cellKeyToChild3=this._cellKeyToChildren.get(cellKey))!==null&&_this$_cellKeyToChild3!==void 0?_this$_cellKeyToChild3:[];for(var _iterator4=_createForOfIteratorHelperLoose(listSet),_step4;!(_step4=_iterator4()).done;){var list=_step4.value;if(fn(list)){return true;}}return false;}size(){return this._childrenToCellKey.size;}}","map":{"version":3,"names":["_createForOfIteratorHelperLoose","invariant","ChildListCollection","constructor","_cellKeyToChildren","Map","_childrenToCellKey","add","list","cellKey","_this$_cellKeyToChild","has","cellLists","get","Set","set","remove","delete","size","forEach","fn","_iterator","values","_step","done","listSet","value","_iterator2","_step2","forEachInCell","_this$_cellKeyToChild2","_iterator3","_step3","anyInCell","_this$_cellKeyToChild3","_iterator4","_step4"],"sources":["/Users/apple/FounderFinder/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/ChildListCollection.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}