{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{nanoid}from'nanoid/non-secure';import BaseRouter from'./BaseRouter';const TYPE_ROUTE='route';export const TabActions={jumpTo(name,params){return{type:'JUMP_TO',payload:{name,params}};}};const getRouteHistory=(routes,index,backBehavior,initialRouteName)=>{const history=[{type:TYPE_ROUTE,key:routes[index].key}];let initialRouteIndex;switch(backBehavior){case'order':for(let i=index;i>0;i--){history.unshift({type:TYPE_ROUTE,key:routes[i-1].key});}break;case'firstRoute':if(index!==0){history.unshift({type:TYPE_ROUTE,key:routes[0].key});}break;case'initialRoute':initialRouteIndex=routes.findIndex(route=>route.name===initialRouteName);initialRouteIndex=initialRouteIndex===-1?0:initialRouteIndex;if(index!==initialRouteIndex){history.unshift({type:TYPE_ROUTE,key:routes[initialRouteIndex].key});}break;case'history':break;}return history;};const changeIndex=(state,index,backBehavior,initialRouteName)=>{let history;if(backBehavior==='history'){const currentKey=state.routes[index].key;history=state.history.filter(it=>it.type==='route'?it.key!==currentKey:false).concat({type:TYPE_ROUTE,key:currentKey});}else{history=getRouteHistory(state.routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{index,history});};export default function TabRouter(_ref){let{initialRouteName,backBehavior='firstRoute'}=_ref;const router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'tab',getInitialState(_ref2){let{routeNames,routeParamList}=_ref2;const index=initialRouteName!==undefined&&routeNames.includes(initialRouteName)?routeNames.indexOf(initialRouteName):0;const routes=routeNames.map(name=>({name,key:`${name}-${nanoid()}`,params:routeParamList[name]}));const history=getRouteHistory(routes,index,backBehavior,initialRouteName);return{stale:false,type:'tab',key:`tab-${nanoid()}`,index,routeNames,history,routes};},getRehydratedState(partialState,_ref3){var _state$routes,_state$history;let{routeNames,routeParamList}=_ref3;let state=partialState;if(state.stale===false){return state;}const routes=routeNames.map(name=>{const route=state.routes.find(r=>r.name===name);return _objectSpread(_objectSpread({},route),{},{name,key:route&&route.name===name&&route.key?route.key:`${name}-${nanoid()}`,params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),route?route.params:undefined):route?route.params:undefined});});const index=Math.min(Math.max(routeNames.indexOf((_state$routes=state.routes[(state===null||state===void 0?void 0:state.index)??0])===null||_state$routes===void 0?void 0:_state$routes.name),0),routes.length-1);const history=((_state$history=state.history)===null||_state$history===void 0?void 0:_state$history.filter(it=>routes.find(r=>r.key===it.key)))??[];return changeIndex({stale:false,type:'tab',key:`tab-${nanoid()}`,index,routeNames,history,routes},index,backBehavior,initialRouteName);},getStateForRouteNamesChange(state,_ref4){let{routeNames,routeParamList,routeKeyChanges}=_ref4;const routes=routeNames.map(name=>state.routes.find(r=>r.name===name&&!routeKeyChanges.includes(r.name))||{name,key:`${name}-${nanoid()}`,params:routeParamList[name]});const index=Math.max(0,routeNames.indexOf(state.routes[state.index].name));let history=state.history.filter(it=>it.type!=='route'||routes.find(r=>r.key===it.key));if(!history.length){history=getRouteHistory(routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{history,routeNames,routes,index});},getStateForRouteFocus(state,key){const index=state.routes.findIndex(r=>r.key===key);if(index===-1||index===state.index){return state;}return changeIndex(state,index,backBehavior,initialRouteName);},getStateForAction(state,action,_ref5){let{routeParamList,routeGetIdList}=_ref5;switch(action.type){case'JUMP_TO':case'NAVIGATE':{let index=-1;if(action.type==='NAVIGATE'&&action.payload.key){index=state.routes.findIndex(route=>route.key===action.payload.key);}else{index=state.routes.findIndex(route=>route.name===action.payload.name);}if(index===-1){return null;}return changeIndex(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map((route,i)=>{if(i!==index){return route;}const getId=routeGetIdList[route.name];const currentId=getId===null||getId===void 0?void 0:getId({params:route.params});const nextId=getId===null||getId===void 0?void 0:getId({params:action.payload.params});const key=currentId===nextId?route.key:`${route.name}-${nanoid()}`;let params;if(action.type==='NAVIGATE'&&action.payload.merge&&currentId===nextId){params=action.payload.params!==undefined||routeParamList[route.name]!==undefined?_objectSpread(_objectSpread(_objectSpread({},routeParamList[route.name]),route.params),action.payload.params):route.params;}else{params=routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),action.payload.params):action.payload.params;}const path=action.type==='NAVIGATE'&&action.payload.path!=null?action.payload.path:route.path;return params!==route.params||path!==route.path?_objectSpread(_objectSpread({},route),{},{key,path,params}):route;})}),index,backBehavior,initialRouteName);}case'GO_BACK':{if(state.history.length===1){return null;}const previousKey=state.history[state.history.length-2].key;const index=state.routes.findIndex(route=>route.key===previousKey);if(index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{history:state.history.slice(0,-1),index});}default:return BaseRouter.getStateForAction(state,action);}},shouldActionChangeFocus(action){return action.type==='NAVIGATE';},actionCreators:TabActions});return router;}","map":{"version":3,"names":["nanoid","BaseRouter","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","filter","it","concat","_objectSpread","TabRouter","_ref","router","getInitialState","_ref2","routeNames","routeParamList","undefined","includes","indexOf","map","stale","getRehydratedState","partialState","_ref3","_state$routes","_state$history","find","r","Math","min","max","length","getStateForRouteNamesChange","_ref4","routeKeyChanges","getStateForRouteFocus","getStateForAction","action","_ref5","routeGetIdList","getId","currentId","nextId","merge","path","previousKey","slice","shouldActionChangeFocus","actionCreators"],"sources":["/Users/apple/FounderFinder/node_modules/@react-navigation/routers/src/TabRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList, routeGetIdList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                const getId = routeGetIdList[route.name];\n\n                const currentId = getId?.({ params: route.params });\n                const nextId = getId?.({ params: action.payload.params });\n\n                const key =\n                  currentId === nextId\n                    ? route.key\n                    : `${route.name}-${nanoid()}`;\n\n                let params;\n\n                if (\n                  action.type === 'NAVIGATE' &&\n                  action.payload.merge &&\n                  currentId === nextId\n                ) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, key, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}