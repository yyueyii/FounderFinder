{"ast":null,"code":"import invariant from'invariant';import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";import Platform from\"react-native-web/dist/exports/Platform\";const nativeEmitterSubscriptionKey='@@nativeEmitterSubscription@@';export class EventEmitter{_listenerCount=0;constructor(nativeModule){if(nativeModule.__expo_module_name__){return nativeModule;}this._nativeModule=nativeModule;this._eventEmitter=new NativeEventEmitter(nativeModule);}addListener(eventName,listener){if(!this._listenerCount&&true&&this._nativeModule.startObserving){this._nativeModule.startObserving();}this._listenerCount++;const nativeEmitterSubscription=this._eventEmitter.addListener(eventName,listener);const subscription={[nativeEmitterSubscriptionKey]:nativeEmitterSubscription,remove:()=>{this.removeSubscription(subscription);}};return subscription;}removeAllListeners(eventName){const removedListenerCount=this._eventEmitter.listenerCount?this._eventEmitter.listenerCount(eventName):this._eventEmitter.listeners(eventName).length;this._eventEmitter.removeAllListeners(eventName);this._listenerCount-=removedListenerCount;invariant(this._listenerCount>=0,`EventEmitter must have a non-negative number of listeners`);if(!this._listenerCount&&true&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}removeSubscription(subscription){const nativeEmitterSubscription=subscription[nativeEmitterSubscriptionKey];if(!nativeEmitterSubscription){return;}if('remove'in nativeEmitterSubscription){nativeEmitterSubscription.remove();}this._listenerCount--;delete subscription[nativeEmitterSubscriptionKey];subscription.remove=()=>{};if(!this._listenerCount&&true&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}emit(eventName,...params){this._eventEmitter.emit(eventName,...params);}}","map":{"version":3,"names":["invariant","NativeEventEmitter","Platform","nativeEmitterSubscriptionKey","EventEmitter","_listenerCount","constructor","nativeModule","__expo_module_name__","_nativeModule","_eventEmitter","addListener","eventName","listener","startObserving","nativeEmitterSubscription","subscription","remove","removeSubscription","removeAllListeners","removedListenerCount","listenerCount","listeners","length","stopObserving","emit","params"],"sources":["/Users/apple/FounderFinder/node_modules/expo-modules-core/src/EventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  __expo_module_name__?: string;\n  startObserving?: () => void;\n  stopObserving?: () => void;\n\n  // Erase these types as they would conflict with the new NativeModule type.\n  // This EventEmitter is deprecated anyway.\n  addListener?: any;\n  removeListeners?: any;\n};\n\n// @needsAudit\nexport type Subscription = {\n  /**\n   * A method to unsubscribe the listener.\n   */\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n\n  // @ts-expect-error\n  _nativeModule: NativeModule;\n\n  // @ts-expect-error\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    // If the native module is a new module, just return it back as it's already an event emitter.\n    // This is for backwards compatibility until we stop using this legacy class in other packages.\n    if (nativeModule.__expo_module_name__) {\n      // @ts-expect-error\n      return nativeModule;\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      nativeEmitterSubscription.remove();\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,WAAW,CAAC,OAAAC,kBAAA,+DAAAC,QAAA,8CAGlC,KAAM,CAAAC,4BAA4B,CAAG,+BAA+B,CAqBpE,MAAM,MAAO,CAAAC,YAAY,CACvBC,cAAc,CAAG,CAAC,CAQlBC,YAAYC,YAA0B,EAGpC,GAAIA,YAAY,CAACC,oBAAoB,CAAE,CAErC,MAAO,CAAAD,YAAY,C,CAErB,IAAI,CAACE,aAAa,CAAGF,YAAY,CACjC,IAAI,CAACG,aAAa,CAAG,GAAI,CAAAT,kBAAkB,CAACM,YAAmB,CAAC,CAClE,CAEAI,WAAWA,CAAIC,SAAiB,CAAEC,QAA4B,EAC5D,GAAI,CAAC,IAAI,CAACR,cAAc,MAAyB,EAAI,IAAI,CAACI,aAAa,CAACK,cAAc,CAAE,CACtF,IAAI,CAACL,aAAa,CAACK,cAAc,EAAE,C,CAGrC,IAAI,CAACT,cAAc,EAAE,CACrB,KAAM,CAAAU,yBAAyB,CAAG,IAAI,CAACL,aAAa,CAACC,WAAW,CAACC,SAAS,CAAEC,QAAQ,CAAC,CACrF,KAAM,CAAAG,YAAY,CAAG,CACnB,CAACb,4BAA4B,EAAGY,yBAAyB,CACzDE,MAAM,CAAEA,CAAA,GAAK,CACX,IAAI,CAACC,kBAAkB,CAACF,YAAY,CAAC,CACvC,C,CACD,CACD,MAAO,CAAAA,YAAY,CACrB,CAEAG,kBAAkBA,CAACP,SAAiB,EAElC,KAAM,CAAAQ,oBAAoB,CAAG,IAAI,CAACV,aAAa,CAACW,aAAa,CAEzD,IAAI,CAACX,aAAa,CAACW,aAAa,CAACT,SAAS,CAAC,CAE3C,IAAI,CAACF,aAAa,CAACY,SAAS,CAACV,SAAS,CAAC,CAACW,MAAM,CAClD,IAAI,CAACb,aAAa,CAACS,kBAAkB,CAACP,SAAS,CAAC,CAChD,IAAI,CAACP,cAAc,EAAIe,oBAAoB,CAC3CpB,SAAS,CACP,IAAI,CAACK,cAAc,EAAI,CAAC,CACxB,2DAA2D,CAC5D,CAED,GAAI,CAAC,IAAI,CAACA,cAAc,MAAyB,EAAI,IAAI,CAACI,aAAa,CAACe,aAAa,CAAE,CACrF,IAAI,CAACf,aAAa,CAACe,aAAa,EAAE,C,CAEtC,CAEAN,kBAAkBA,CAACF,YAA0B,EAC3C,KAAM,CAAAD,yBAAyB,CAAGC,YAAY,CAACb,4BAA4B,CAAC,CAC5E,GAAI,CAACY,yBAAyB,CAAE,CAC9B,O,CAGF,GAAI,QAAQ,EAAI,CAAAA,yBAAyB,CAAE,CACzCA,yBAAyB,CAACE,MAAM,EAAE,C,CAEpC,IAAI,CAACZ,cAAc,EAAE,CAIrB,MAAO,CAAAW,YAAY,CAACb,4BAA4B,CAAC,CAGjDa,YAAY,CAACC,MAAM,CAAG,IAAK,CAAE,CAAC,CAE9B,GAAI,CAAC,IAAI,CAACZ,cAAc,MAAyB,EAAI,IAAI,CAACI,aAAa,CAACe,aAAa,CAAE,CACrF,IAAI,CAACf,aAAa,CAACe,aAAa,EAAE,C,CAEtC,CAEAC,IAAIA,CAACb,SAAiB,CAAE,GAAGc,MAAa,EACtC,IAAI,CAAChB,aAAa,CAACe,IAAI,CAACb,SAAS,CAAE,GAAGc,MAAM,CAAC,CAC/C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}