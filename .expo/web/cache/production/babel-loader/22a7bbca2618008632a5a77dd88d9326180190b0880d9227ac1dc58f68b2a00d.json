{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.resolve=void 0;function assertPath(path){if(typeof path!=='string'){throw new TypeError('Path must be a string. Received '+JSON.stringify(path));}}function normalizeStringPosix(path,allowAboveRoot){let res='';let lastSegmentLength=0;let lastSlash=-1;let dots=0;let code;for(let i=0;i<=path.length;++i){if(i<path.length){code=path.charCodeAt(i);}else if(code===47){break;}else{code=47;}if(code===47){if(lastSlash===i-1||dots===1){}else if(lastSlash!==i-1&&dots===2){if(res.length<2||lastSegmentLength!==2||res.charCodeAt(res.length-1)!==46||res.charCodeAt(res.length-2)!==46){if(res.length>2){const lastSlashIndex=res.lastIndexOf('/');if(lastSlashIndex!==res.length-1){if(lastSlashIndex===-1){res='';lastSegmentLength=0;}else{res=res.slice(0,lastSlashIndex);lastSegmentLength=res.length-1-res.lastIndexOf('/');}lastSlash=i;dots=0;continue;}}else if(res.length===2||res.length===1){res='';lastSegmentLength=0;lastSlash=i;dots=0;continue;}}if(allowAboveRoot){if(res.length>0)res+='/..';else res='..';lastSegmentLength=2;}}else{if(res.length>0)res+='/'+path.slice(lastSlash+1,i);else res=path.slice(lastSlash+1,i);lastSegmentLength=i-lastSlash-1;}lastSlash=i;dots=0;}else if(code===46&&dots!==-1){++dots;}else{dots=-1;}}return res;}function resolve(...segments){let resolvedPath='';let resolvedAbsolute=false;for(let i=segments.length-1;i>=-1&&!resolvedAbsolute;i--){let path;if(i>=0){path=segments[i];}else{path='/';}assertPath(path);if(path.length===0){continue;}resolvedPath=path+'/'+resolvedPath;resolvedAbsolute=path.charCodeAt(0)===47;}resolvedPath=normalizeStringPosix(resolvedPath,!resolvedAbsolute);if(resolvedAbsolute){if(resolvedPath.length>0){return'/'+resolvedPath;}else{return'/';}}else if(resolvedPath.length>0){return resolvedPath;}else{return'.';}}exports.resolve=resolve;","map":{"version":3,"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","resolve","segments","resolvedPath","resolvedAbsolute","exports"],"sources":["/Users/apple/FounderFinder/node_modules/expo-router/src/link/path.ts"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// https://github.com/browserify/path-browserify/blob/master/index.js\n\nfunction assertPath(path: string) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path: string, allowAboveRoot?: boolean) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i);\n    } else if (code === 47 /*/*/) {\n      break;\n    } else {\n      code = 47 /*/*/;\n    }\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (\n          res.length < 2 ||\n          lastSegmentLength !== 2 ||\n          res.charCodeAt(res.length - 1) !== 46 /*.*/ ||\n          res.charCodeAt(res.length - 2) !== 46 /*.*/\n        ) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) res += '/..';\n          else res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i);\n        else res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\n// path.resolve([from ...], to)\nexport function resolve(...segments: string[]) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = segments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    let path;\n    if (i >= 0) {\n      path = segments[i];\n    } else {\n      path = '/';\n    }\n\n    assertPath(path);\n\n    // Skip empty entries\n    if (path.length === 0) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n  if (resolvedAbsolute) {\n    if (resolvedPath.length > 0) {\n      return '/' + resolvedPath;\n    } else {\n      return '/';\n    }\n  } else if (resolvedPath.length > 0) {\n    return resolvedPath;\n  } else {\n    return '.';\n  }\n}\n"],"mappings":"6FAuBA,QAAS,CAAAA,UAAUA,CAACC,IAAY,EAC9B,GAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,CAAE,CAC5B,KAAM,IAAI,CAAAC,SAAS,CAAC,kCAAkC,CAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC,C,CAElF,CAGA,QAAS,CAAAI,oBAAoBA,CAACJ,IAAY,CAAEK,cAAwB,EAClE,GAAI,CAAAC,GAAG,CAAG,EAAE,CACZ,GAAI,CAAAC,iBAAiB,CAAG,CAAC,CACzB,GAAI,CAAAC,SAAS,CAAG,CAAC,CAAC,CAClB,GAAI,CAAAC,IAAI,CAAG,CAAC,CACZ,GAAI,CAAAC,IAAI,CACR,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIX,IAAI,CAACY,MAAM,CAAE,EAAED,CAAC,CAAE,CACrC,GAAIA,CAAC,CAAGX,IAAI,CAACY,MAAM,CAAE,CACnBF,IAAI,CAAGV,IAAI,CAACa,UAAU,CAACF,CAAC,CAAC,C,CAC1B,IAAM,IAAID,IAAI,GAAK,EAAE,CAAQ,CAC5B,M,CACD,IAAM,CACLA,IAAI,CAAG,EAAE,C,CAEX,GAAIA,IAAI,GAAK,EAAE,CAAQ,CACrB,GAAIF,SAAS,GAAKG,CAAC,CAAG,CAAC,EAAIF,IAAI,GAAK,CAAC,CAAE,C,CAEtC,IAAM,IAAID,SAAS,GAAKG,CAAC,CAAG,CAAC,EAAIF,IAAI,GAAK,CAAC,CAAE,CAC5C,GACEH,GAAG,CAACM,MAAM,CAAG,CAAC,EACdL,iBAAiB,GAAK,CAAC,EACvBD,GAAG,CAACO,UAAU,CAACP,GAAG,CAACM,MAAM,CAAG,CAAC,CAAC,GAAK,EAAE,EACrCN,GAAG,CAACO,UAAU,CAACP,GAAG,CAACM,MAAM,CAAG,CAAC,CAAC,GAAK,EAAE,CACrC,CACA,GAAIN,GAAG,CAACM,MAAM,CAAG,CAAC,CAAE,CAClB,KAAM,CAAAE,cAAc,CAAGR,GAAG,CAACS,WAAW,CAAC,GAAG,CAAC,CAC3C,GAAID,cAAc,GAAKR,GAAG,CAACM,MAAM,CAAG,CAAC,CAAE,CACrC,GAAIE,cAAc,GAAK,CAAC,CAAC,CAAE,CACzBR,GAAG,CAAG,EAAE,CACRC,iBAAiB,CAAG,CAAC,C,CACtB,IAAM,CACLD,GAAG,CAAGA,GAAG,CAACU,KAAK,CAAC,CAAC,CAAEF,cAAc,CAAC,CAClCP,iBAAiB,CAAGD,GAAG,CAACM,MAAM,CAAG,CAAC,CAAGN,GAAG,CAACS,WAAW,CAAC,GAAG,CAAC,C,CAE3DP,SAAS,CAAGG,CAAC,CACbF,IAAI,CAAG,CAAC,CACR,S,EAEH,IAAM,IAAIH,GAAG,CAACM,MAAM,GAAK,CAAC,EAAIN,GAAG,CAACM,MAAM,GAAK,CAAC,CAAE,CAC/CN,GAAG,CAAG,EAAE,CACRC,iBAAiB,CAAG,CAAC,CACrBC,SAAS,CAAGG,CAAC,CACbF,IAAI,CAAG,CAAC,CACR,S,EAGJ,GAAIJ,cAAc,CAAE,CAClB,GAAIC,GAAG,CAACM,MAAM,CAAG,CAAC,CAAEN,GAAG,EAAI,KAAK,CAAC,IAC5B,CAAAA,GAAG,CAAG,IAAI,CACfC,iBAAiB,CAAG,CAAC,C,EAExB,IAAM,CACL,GAAID,GAAG,CAACM,MAAM,CAAG,CAAC,CAAEN,GAAG,EAAI,GAAG,CAAGN,IAAI,CAACgB,KAAK,CAACR,SAAS,CAAG,CAAC,CAAEG,CAAC,CAAC,CAAC,IACzD,CAAAL,GAAG,CAAGN,IAAI,CAACgB,KAAK,CAACR,SAAS,CAAG,CAAC,CAAEG,CAAC,CAAC,CACvCJ,iBAAiB,CAAGI,CAAC,CAAGH,SAAS,CAAG,CAAC,C,CAEvCA,SAAS,CAAGG,CAAC,CACbF,IAAI,CAAG,CAAC,C,CACT,IAAM,IAAIC,IAAI,GAAK,EAAE,EAAUD,IAAI,GAAK,CAAC,CAAC,CAAE,CAC3C,EAAEA,IAAI,C,CACP,IAAM,CACLA,IAAI,CAAG,CAAC,CAAC,C,EAGb,MAAO,CAAAH,GAAG,CACZ,CAGA,QAAgB,CAAAW,OAAOA,CAAC,GAAGC,QAAkB,EAC3C,GAAI,CAAAC,YAAY,CAAG,EAAE,CACrB,GAAI,CAAAC,gBAAgB,CAAG,KAAK,CAE5B,IAAK,GAAI,CAAAT,CAAC,CAAGO,QAAQ,CAACN,MAAM,CAAG,CAAC,CAAED,CAAC,EAAI,CAAC,CAAC,EAAI,CAACS,gBAAgB,CAAET,CAAC,EAAE,CAAE,CACnE,GAAI,CAAAX,IAAI,CACR,GAAIW,CAAC,EAAI,CAAC,CAAE,CACVX,IAAI,CAAGkB,QAAQ,CAACP,CAAC,CAAC,C,CACnB,IAAM,CACLX,IAAI,CAAG,GAAG,C,CAGZD,UAAU,CAACC,IAAI,CAAC,CAGhB,GAAIA,IAAI,CAACY,MAAM,GAAK,CAAC,CAAE,CACrB,S,CAGFO,YAAY,CAAGnB,IAAI,CAAG,GAAG,CAAGmB,YAAY,CACxCC,gBAAgB,CAAGpB,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,GAAK,EAAE,C,CAO9CM,YAAY,CAAGf,oBAAoB,CAACe,YAAY,CAAE,CAACC,gBAAgB,CAAC,CAEpE,GAAIA,gBAAgB,CAAE,CACpB,GAAID,YAAY,CAACP,MAAM,CAAG,CAAC,CAAE,CAC3B,MAAO,GAAG,CAAGO,YAAY,C,CAC1B,IAAM,CACL,MAAO,GAAG,C,EAEb,IAAM,IAAIA,YAAY,CAACP,MAAM,CAAG,CAAC,CAAE,CAClC,MAAO,CAAAO,YAAY,C,CACpB,IAAM,CACL,MAAO,GAAG,C,CAEd,CAxCAE,OAAA,CAAAJ,OAAA,CAAAA,OAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}