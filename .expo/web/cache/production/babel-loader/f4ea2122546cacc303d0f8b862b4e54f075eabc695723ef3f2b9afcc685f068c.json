{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _toPropertyKey(t){var i=_toPrimitive(t,\"string\");return\"symbol\"==typeof i?i:i+\"\";}function _toPrimitive(t,r){if(\"object\"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||\"default\");if(\"object\"!=typeof i)return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(\"string\"===r?String:Number)(t);}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import NavigationBuilderContext from'./NavigationBuilderContext';import NavigationContext from'./NavigationContext';import NavigationRouteContext from'./NavigationRouteContext';import SceneView from'./SceneView';import useNavigationCache from'./useNavigationCache';import useRouteCache from'./useRouteCache';export default function useDescriptors(_ref){let{state,screens,navigation,screenOptions,defaultScreenOptions,onAction,getState,setState,addListener,addKeyedListener,onRouteFocus,router,emitter}=_ref;const[options,setOptions]=React.useState({});const{onDispatchAction,onOptionsChange,stackRef}=React.useContext(NavigationBuilderContext);const context=React.useMemo(()=>({navigation,onAction,addListener,addKeyedListener,onRouteFocus,onDispatchAction,onOptionsChange,stackRef}),[navigation,onAction,addListener,addKeyedListener,onRouteFocus,onDispatchAction,onOptionsChange,stackRef]);const navigations=useNavigationCache({state,getState,navigation,setOptions,router,emitter});const routes=useRouteCache(state.routes);return routes.reduce((acc,route,i)=>{const config=screens[route.name];const screen=config.props;const navigation=navigations[route.key];const optionsList=[screenOptions,...(config.options?config.options.filter(Boolean):[]),screen.options,options[route.key]];const customOptions=optionsList.reduce((acc,curr)=>Object.assign(acc,typeof curr!=='function'?curr:curr({route,navigation})),{});const mergedOptions=_objectSpread(_objectSpread({},typeof defaultScreenOptions==='function'?defaultScreenOptions({route,navigation,options:customOptions}):defaultScreenOptions),customOptions);const clearOptions=()=>setOptions(o=>{if(route.key in o){const _route$key=route.key,{[_route$key]:_}=o,rest=_objectWithoutProperties(o,[_route$key].map(_toPropertyKey));return rest;}return o;});acc[route.key]={route,navigation,render(){return React.createElement(NavigationBuilderContext.Provider,{key:route.key,value:context},React.createElement(NavigationContext.Provider,{value:navigation},React.createElement(NavigationRouteContext.Provider,{value:route},React.createElement(SceneView,{navigation:navigation,route:route,screen:screen,routeState:state.routes[i].state,getState:getState,setState:setState,options:mergedOptions,clearOptions:clearOptions}))));},options:mergedOptions};return acc;},{});}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationContext","NavigationRouteContext","SceneView","useNavigationCache","useRouteCache","useDescriptors","_ref","state","screens","navigation","screenOptions","defaultScreenOptions","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","options","setOptions","useState","onDispatchAction","onOptionsChange","stackRef","useContext","context","useMemo","navigations","routes","reduce","acc","route","i","config","name","screen","props","key","optionsList","filter","Boolean","customOptions","curr","Object","assign","mergedOptions","_objectSpread","clearOptions","o","_route$key","_","rest","_objectWithoutProperties","map","_toPropertyKey","render","createElement","Provider","value","routeState"],"sources":["/Users/apple/FounderFinder/node_modules/@react-navigation/core/src/useDescriptors.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  AddKeyedListener,\n  AddListener,\n} from './NavigationBuilderContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport SceneView from './SceneView';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  props: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n};\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?: ScreenOptionsOrCallback<ScreenOptions>;\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  defaultScreenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange, stackRef } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions, EventMap>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      options[route.key],\n    ];\n\n    const customOptions = optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          // @ts-expect-error: we check for function but TS still complains\n          typeof curr !== 'function' ? curr : curr({ route, navigation })\n        ),\n      {} as ScreenOptions\n    );\n\n    const mergedOptions = {\n      ...(typeof defaultScreenOptions === 'function'\n        ? // @ts-expect-error: ts gives incorrect error here\n          defaultScreenOptions({\n            route,\n            navigation,\n            options: customOptions,\n          })\n        : defaultScreenOptions),\n      ...customOptions,\n    };\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={mergedOptions}\n                  clearOptions={clearOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: mergedOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}