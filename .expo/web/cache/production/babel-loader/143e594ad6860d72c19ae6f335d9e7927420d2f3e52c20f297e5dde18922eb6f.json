{"ast":null,"code":"import{nanoid}from'nanoid/non-secure';import*as React from'react';import useLatestCallback from'use-latest-callback';import NavigationHelpersContext from'./NavigationHelpersContext';import NavigationRouteContext from'./NavigationRouteContext';import PreventRemoveContext from'./PreventRemoveContext';const transformPreventedRoutes=preventedRoutesMap=>{const preventedRoutesToTransform=[...preventedRoutesMap.values()];const preventedRoutes=preventedRoutesToTransform.reduce((acc,_ref)=>{var _acc$routeKey;let{routeKey,preventRemove}=_ref;acc[routeKey]={preventRemove:((_acc$routeKey=acc[routeKey])===null||_acc$routeKey===void 0?void 0:_acc$routeKey.preventRemove)||preventRemove};return acc;},{});return preventedRoutes;};export default function PreventRemoveProvider(_ref2){let{children}=_ref2;const[parentId]=React.useState(()=>nanoid());const[preventedRoutesMap,setPreventedRoutesMap]=React.useState(new Map());const navigation=React.useContext(NavigationHelpersContext);const route=React.useContext(NavigationRouteContext);const preventRemoveContextValue=React.useContext(PreventRemoveContext);const setParentPrevented=preventRemoveContextValue===null||preventRemoveContextValue===void 0?void 0:preventRemoveContextValue.setPreventRemove;const setPreventRemove=useLatestCallback((id,routeKey,preventRemove)=>{if(preventRemove&&(navigation==null||navigation!==null&&navigation!==void 0&&navigation.getState().routes.every(route=>route.key!==routeKey))){throw new Error(`Couldn't find a route with the key ${routeKey}. Is your component inside NavigationContent?`);}setPreventedRoutesMap(prevPrevented=>{var _prevPrevented$get,_prevPrevented$get2;if(routeKey===((_prevPrevented$get=prevPrevented.get(id))===null||_prevPrevented$get===void 0?void 0:_prevPrevented$get.routeKey)&&preventRemove===((_prevPrevented$get2=prevPrevented.get(id))===null||_prevPrevented$get2===void 0?void 0:_prevPrevented$get2.preventRemove)){return prevPrevented;}const nextPrevented=new Map(prevPrevented);if(preventRemove){nextPrevented.set(id,{routeKey,preventRemove});}else{nextPrevented.delete(id);}return nextPrevented;});});const isPrevented=[...preventedRoutesMap.values()].some(_ref3=>{let{preventRemove}=_ref3;return preventRemove;});React.useEffect(()=>{if((route===null||route===void 0?void 0:route.key)!==undefined&&setParentPrevented!==undefined){setParentPrevented(parentId,route.key,isPrevented);return()=>{setParentPrevented(parentId,route.key,false);};}return;},[parentId,isPrevented,route===null||route===void 0?void 0:route.key,setParentPrevented]);const value=React.useMemo(()=>({setPreventRemove,preventedRoutes:transformPreventedRoutes(preventedRoutesMap)}),[setPreventRemove,preventedRoutesMap]);return React.createElement(PreventRemoveContext.Provider,{value:value},children);}","map":{"version":3,"names":["nanoid","React","useLatestCallback","NavigationHelpersContext","NavigationRouteContext","PreventRemoveContext","transformPreventedRoutes","preventedRoutesMap","preventedRoutesToTransform","values","preventedRoutes","reduce","acc","_ref","_acc$routeKey","routeKey","preventRemove","PreventRemoveProvider","_ref2","children","parentId","useState","setPreventedRoutesMap","Map","navigation","useContext","route","preventRemoveContextValue","setParentPrevented","setPreventRemove","id","getState","routes","every","key","Error","prevPrevented","_prevPrevented$get","_prevPrevented$get2","get","nextPrevented","set","delete","isPrevented","some","_ref3","useEffect","undefined","value","useMemo","createElement","Provider"],"sources":["/Users/apple/FounderFinder/node_modules/@react-navigation/core/src/PreventRemoveProvider.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport PreventRemoveContext, { PreventedRoutes } from './PreventRemoveContext';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype PreventedRoutesMap = Map<\n  string,\n  {\n    routeKey: string;\n    preventRemove: boolean;\n  }\n>;\n\n/**\n * Util function to transform map of prevented routes to a simpler object.\n */\nconst transformPreventedRoutes = (\n  preventedRoutesMap: PreventedRoutesMap\n): PreventedRoutes => {\n  const preventedRoutesToTransform = [...preventedRoutesMap.values()];\n\n  const preventedRoutes = preventedRoutesToTransform.reduce<PreventedRoutes>(\n    (acc, { routeKey, preventRemove }) => {\n      acc[routeKey] = {\n        preventRemove: acc[routeKey]?.preventRemove || preventRemove,\n      };\n      return acc;\n    },\n    {}\n  );\n\n  return preventedRoutes;\n};\n\n/**\n * Component used for managing which routes have to be prevented from removal in native-stack.\n */\nexport default function PreventRemoveProvider({ children }: Props) {\n  const [parentId] = React.useState(() => nanoid());\n  const [preventedRoutesMap, setPreventedRoutesMap] =\n    React.useState<PreventedRoutesMap>(new Map());\n\n  const navigation = React.useContext(NavigationHelpersContext);\n  const route = React.useContext(NavigationRouteContext);\n\n  const preventRemoveContextValue = React.useContext(PreventRemoveContext);\n  // take `setPreventRemove` from parent context - if exist it means we're in a nested context\n  const setParentPrevented = preventRemoveContextValue?.setPreventRemove;\n\n  const setPreventRemove = useLatestCallback(\n    (id: string, routeKey: string, preventRemove: boolean): void => {\n      if (\n        preventRemove &&\n        (navigation == null ||\n          navigation\n            ?.getState()\n            .routes.every((route) => route.key !== routeKey))\n      ) {\n        throw new Error(\n          `Couldn't find a route with the key ${routeKey}. Is your component inside NavigationContent?`\n        );\n      }\n\n      setPreventedRoutesMap((prevPrevented) => {\n        // values haven't changed - do nothing\n        if (\n          routeKey === prevPrevented.get(id)?.routeKey &&\n          preventRemove === prevPrevented.get(id)?.preventRemove\n        ) {\n          return prevPrevented;\n        }\n\n        const nextPrevented = new Map(prevPrevented);\n\n        if (preventRemove) {\n          nextPrevented.set(id, {\n            routeKey,\n            preventRemove,\n          });\n        } else {\n          nextPrevented.delete(id);\n        }\n\n        return nextPrevented;\n      });\n    }\n  );\n\n  const isPrevented = [...preventedRoutesMap.values()].some(\n    ({ preventRemove }) => preventRemove\n  );\n\n  React.useEffect(() => {\n    if (route?.key !== undefined && setParentPrevented !== undefined) {\n      // when route is defined (and setParentPrevented) it means we're in a nested stack\n      // route.key then will be the route key of parent\n      setParentPrevented(parentId, route.key, isPrevented);\n      return () => {\n        setParentPrevented(parentId, route.key, false);\n      };\n    }\n\n    return;\n  }, [parentId, isPrevented, route?.key, setParentPrevented]);\n\n  const value = React.useMemo(\n    () => ({\n      setPreventRemove,\n      preventedRoutes: transformPreventedRoutes(preventedRoutesMap),\n    }),\n    [setPreventRemove, preventedRoutesMap]\n  );\n\n  return (\n    <PreventRemoveContext.Provider value={value}>\n      {children}\n    </PreventRemoveContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}