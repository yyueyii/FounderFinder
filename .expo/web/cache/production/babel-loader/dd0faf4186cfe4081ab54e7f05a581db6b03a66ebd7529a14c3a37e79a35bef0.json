{"ast":null,"code":"import*as React from'react';const UNINTIALIZED_STATE={};export default function useSyncState(initialState){const stateRef=React.useRef(UNINTIALIZED_STATE);const isSchedulingRef=React.useRef(false);const isMountedRef=React.useRef(true);React.useEffect(()=>{isMountedRef.current=true;return()=>{isMountedRef.current=false;};},[]);if(stateRef.current===UNINTIALIZED_STATE){stateRef.current=typeof initialState==='function'?initialState():initialState;}const[trackingState,setTrackingState]=React.useState(stateRef.current);const getState=React.useCallback(()=>stateRef.current,[]);const setState=React.useCallback(state=>{if(state===stateRef.current||!isMountedRef.current){return;}stateRef.current=state;if(!isSchedulingRef.current){setTrackingState(state);}},[]);const scheduleUpdate=React.useCallback(callback=>{isSchedulingRef.current=true;try{callback();}finally{isSchedulingRef.current=false;}},[]);const flushUpdates=React.useCallback(()=>{if(!isMountedRef.current){return;}setTrackingState(stateRef.current);},[]);if(trackingState!==stateRef.current){setTrackingState(stateRef.current);}const state=stateRef.current;React.useDebugValue(state);return[state,getState,setState,scheduleUpdate,flushUpdates];}","map":{"version":3,"names":["React","UNINTIALIZED_STATE","useSyncState","initialState","stateRef","useRef","isSchedulingRef","isMountedRef","useEffect","current","trackingState","setTrackingState","useState","getState","useCallback","setState","state","scheduleUpdate","callback","flushUpdates","useDebugValue"],"sources":["/Users/apple/FounderFinder/node_modules/@react-navigation/core/src/useSyncState.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\n/**\n * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n */\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n  const isSchedulingRef = React.useRef(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-expect-error: initialState is a function, but TypeScript doesn't think so\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [trackingState, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current || !isMountedRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback((callback: () => void) => {\n    isSchedulingRef.current = true;\n\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n\n  const flushUpdates = React.useCallback(() => {\n    if (!isMountedRef.current) {\n      return;\n    }\n\n    // Make sure that the tracking state is up-to-date.\n    // We call it unconditionally, but React should skip the update if state is unchanged.\n    setTrackingState(stateRef.current);\n  }, []);\n\n  // If we're rendering and the tracking state is out of date, update it immediately\n  // This will make sure that our updates are applied as early as possible.\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n\n  const state = stateRef.current;\n\n  React.useDebugValue(state);\n\n  return [state, getState, setState, scheduleUpdate, flushUpdates] as const;\n}\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,KAAM,CAAAC,kBAAkB,CAAG,CAAC,CAAC,CAK7B,cAAe,SAAS,CAAAC,YAAYA,CAAIC,YAA4B,CAAE,CACpE,KAAM,CAAAC,QAAQ,CAAGJ,KAAK,CAACK,MAAM,CAAIJ,kBAAkB,CAAQ,CAC3D,KAAM,CAAAK,eAAe,CAAGN,KAAK,CAACK,MAAM,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAAE,YAAY,CAAGP,KAAK,CAACK,MAAM,CAAC,IAAI,CAAC,CAEvCL,KAAK,CAACQ,SAAS,CAAC,IAAM,CACpBD,YAAY,CAACE,OAAO,CAAG,IAAI,CAE3B,MAAO,IAAM,CACXF,YAAY,CAACE,OAAO,CAAG,KAAK,CAC9B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIL,QAAQ,CAACK,OAAO,GAAKR,kBAAkB,CAAE,CAC3CG,QAAQ,CAACK,OAAO,CAEd,MAAO,CAAAN,YAAY,GAAK,UAAU,CAAGA,YAAY,EAAE,CAAGA,YAAY,CACtE,CAEA,KAAM,CAACO,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,KAAK,CAACY,QAAQ,CAACR,QAAQ,CAACK,OAAO,CAAC,CAE1E,KAAM,CAAAI,QAAQ,CAAGb,KAAK,CAACc,WAAW,CAAC,IAAMV,QAAQ,CAACK,OAAO,CAAE,EAAE,CAAC,CAE9D,KAAM,CAAAM,QAAQ,CAAGf,KAAK,CAACc,WAAW,CAAEE,KAAQ,EAAK,CAC/C,GAAIA,KAAK,GAAKZ,QAAQ,CAACK,OAAO,EAAI,CAACF,YAAY,CAACE,OAAO,CAAE,CACvD,OACF,CAEAL,QAAQ,CAACK,OAAO,CAAGO,KAAK,CAExB,GAAI,CAACV,eAAe,CAACG,OAAO,CAAE,CAC5BE,gBAAgB,CAACK,KAAK,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,cAAc,CAAGjB,KAAK,CAACc,WAAW,CAAEI,QAAoB,EAAK,CACjEZ,eAAe,CAACG,OAAO,CAAG,IAAI,CAE9B,GAAI,CACFS,QAAQ,EAAE,CACZ,CAAC,OAAS,CACRZ,eAAe,CAACG,OAAO,CAAG,KAAK,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,YAAY,CAAGnB,KAAK,CAACc,WAAW,CAAC,IAAM,CAC3C,GAAI,CAACP,YAAY,CAACE,OAAO,CAAE,CACzB,OACF,CAIAE,gBAAgB,CAACP,QAAQ,CAACK,OAAO,CAAC,CACpC,CAAC,CAAE,EAAE,CAAC,CAIN,GAAIC,aAAa,GAAKN,QAAQ,CAACK,OAAO,CAAE,CACtCE,gBAAgB,CAACP,QAAQ,CAACK,OAAO,CAAC,CACpC,CAEA,KAAM,CAAAO,KAAK,CAAGZ,QAAQ,CAACK,OAAO,CAE9BT,KAAK,CAACoB,aAAa,CAACJ,KAAK,CAAC,CAE1B,MAAO,CAACA,KAAK,CAAEH,QAAQ,CAAEE,QAAQ,CAAEE,cAAc,CAAEE,YAAY,CAAC,CAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}