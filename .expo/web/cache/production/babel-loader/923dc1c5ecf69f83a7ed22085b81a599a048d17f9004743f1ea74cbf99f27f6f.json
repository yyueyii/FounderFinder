{"ast":null,"code":"const formatToList=items=>items.map(key=>`- ${key}`).join('\\n');export default function validatePathConfig(config){let root=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;const validKeys=['initialRouteName','screens'];if(!root){validKeys.push('path','exact','stringify','parse');}const invalidKeys=Object.keys(config).filter(key=>!validKeys.includes(key));if(invalidKeys.length){throw new Error(`Found invalid properties in the configuration:\\n${formatToList(invalidKeys)}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(validKeys)}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);}if(config.screens){Object.entries(config.screens).forEach(_ref=>{let[_,value]=_ref;if(typeof value!=='string'){validatePathConfig(value,false);}});}}","map":{"version":3,"names":["formatToList","items","map","key","join","validatePathConfig","config","root","arguments","length","undefined","validKeys","push","invalidKeys","Object","keys","filter","includes","Error","screens","entries","forEach","_ref","_","value"],"sources":["/Users/apple/FounderFinder/node_modules/@react-navigation/core/src/validatePathConfig.tsx"],"sourcesContent":["const formatToList = (items: string[]) =>\n  items.map((key) => `- ${key}`).join('\\n');\n\nexport default function validatePathConfig(config: any, root = true) {\n  const validKeys = ['initialRouteName', 'screens'];\n\n  if (!root) {\n    validKeys.push('path', 'exact', 'stringify', 'parse');\n  }\n\n  const invalidKeys = Object.keys(config).filter(\n    (key) => !validKeys.includes(key)\n  );\n\n  if (invalidKeys.length) {\n    throw new Error(\n      `Found invalid properties in the configuration:\\n${formatToList(\n        invalidKeys\n      )}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(\n        validKeys\n      )}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`\n    );\n  }\n\n  if (config.screens) {\n    Object.entries(config.screens).forEach(([_, value]) => {\n      if (typeof value !== 'string') {\n        validatePathConfig(value, false);\n      }\n    });\n  }\n}\n"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAIC,KAAe,EACnCA,KAAK,CAACC,GAAG,CAAEC,GAAG,EAAM,KAAIA,GAAI,EAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAE3C,cAAe,SAAS,CAAAC,kBAAkBA,CAACC,MAAW,CAAe,IAAb,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACjE,KAAM,CAAAG,SAAS,CAAG,CAAC,kBAAkB,CAAE,SAAS,CAAC,CAEjD,GAAI,CAACJ,IAAI,CAAE,CACTI,SAAS,CAACC,IAAI,CAAC,MAAM,CAAE,OAAO,CAAE,WAAW,CAAE,OAAO,CAAC,CACvD,CAEA,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC,CAACU,MAAM,CAC3Cb,GAAG,EAAK,CAACQ,SAAS,CAACM,QAAQ,CAACd,GAAG,CAAC,CAClC,CAED,GAAIU,WAAW,CAACJ,MAAM,CAAE,CACtB,KAAM,IAAI,CAAAS,KAAK,CACZ,mDAAkDlB,YAAY,CAC7Da,WAAW,CACX,qHAAoHb,YAAY,CAChIW,SAAS,CACT,wHAAuH,CAC1H,CACH,CAEA,GAAIL,MAAM,CAACa,OAAO,CAAE,CAClBL,MAAM,CAACM,OAAO,CAACd,MAAM,CAACa,OAAO,CAAC,CAACE,OAAO,CAACC,IAAA,EAAgB,IAAf,CAACC,CAAC,CAAEC,KAAK,CAAC,CAAAF,IAAA,CAChD,GAAI,MAAO,CAAAE,KAAK,GAAK,QAAQ,CAAE,CAC7BnB,kBAAkB,CAACmB,KAAK,CAAE,KAAK,CAAC,CAClC,CACF,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}