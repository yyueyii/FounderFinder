{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});const formatToList=items=>items.map(key=>`- ${key}`).join('\\n');function validatePathConfig(config,root=true){const validKeys=['initialRouteName','screens','_route'];if(!root){validKeys.push('path','exact','stringify','parse');}const invalidKeys=Object.keys(config).filter(key=>!validKeys.includes(key));if(invalidKeys.length){throw new Error(`Found invalid properties in the configuration:\\n${formatToList(invalidKeys)}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(validKeys)}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);}if(config.screens){Object.entries(config.screens).forEach(([_,value])=>{if(typeof value!=='string'){validatePathConfig(value,false);}});}}exports.default=validatePathConfig;","map":{"version":3,"names":["formatToList","items","map","key","join","validatePathConfig","config","root","validKeys","push","invalidKeys","Object","keys","filter","includes","length","Error","screens","entries","forEach","_","value","exports","default"],"sources":["/Users/apple/FounderFinder/node_modules/expo-router/src/fork/validatePathConfig.ts"],"sourcesContent":["const formatToList = (items: string[]) => items.map((key) => `- ${key}`).join('\\n');\n\nexport default function validatePathConfig(config: any, root = true) {\n  const validKeys = ['initialRouteName', 'screens', '_route'];\n\n  if (!root) {\n    validKeys.push('path', 'exact', 'stringify', 'parse');\n  }\n\n  const invalidKeys = Object.keys(config).filter((key) => !validKeys.includes(key));\n\n  if (invalidKeys.length) {\n    throw new Error(\n      `Found invalid properties in the configuration:\\n${formatToList(\n        invalidKeys\n      )}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(\n        validKeys\n      )}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`\n    );\n  }\n\n  if (config.screens) {\n    Object.entries(config.screens).forEach(([_, value]) => {\n      if (typeof value !== 'string') {\n        validatePathConfig(value, false);\n      }\n    });\n  }\n}\n"],"mappings":"sEAAA,KAAM,CAAAA,YAAY,CAAIC,KAAe,EAAKA,KAAK,CAACC,GAAG,CAAEC,GAAG,EAAK,KAAKA,GAAG,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAEnF,QAAwB,CAAAC,kBAAkBA,CAACC,MAAW,CAAEC,IAAI,CAAG,IAAI,EACjE,KAAM,CAAAC,SAAS,CAAG,CAAC,kBAAkB,CAAE,SAAS,CAAE,QAAQ,CAAC,CAE3D,GAAI,CAACD,IAAI,CAAE,CACTC,SAAS,CAACC,IAAI,CAAC,MAAM,CAAE,OAAO,CAAE,WAAW,CAAE,OAAO,CAAC,C,CAGvD,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC,CAACO,MAAM,CAAEV,GAAG,EAAK,CAACK,SAAS,CAACM,QAAQ,CAACX,GAAG,CAAC,CAAC,CAEjF,GAAIO,WAAW,CAACK,MAAM,CAAE,CACtB,KAAM,IAAI,CAAAC,KAAK,CACb,mDAAmDhB,YAAY,CAC7DU,WAAW,CACZ,qHAAqHV,YAAY,CAChIQ,SAAS,CACV,wHAAwH,CAC1H,C,CAGH,GAAIF,MAAM,CAACW,OAAO,CAAE,CAClBN,MAAM,CAACO,OAAO,CAACZ,MAAM,CAACW,OAAO,CAAC,CAACE,OAAO,CAAC,CAAC,CAACC,CAAC,CAAEC,KAAK,CAAC,GAAI,CACpD,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CAC7BhB,kBAAkB,CAACgB,KAAK,CAAE,KAAK,CAAC,C,CAEpC,CAAC,CAAC,C,CAEN,CA1BAC,OAAA,CAAAC,OAAA,CAAAlB,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}