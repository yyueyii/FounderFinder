{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.resolveHref=void 0;const resolveHref=href=>{if(typeof href==='string'){return(0,exports.resolveHref)({pathname:href});}const path=href.pathname??'';if(!href?.params){return path;}const{pathname,params}=createQualifiedPathname(path,_objectSpread({},href.params));const paramsString=createQueryParams(params);return pathname+(paramsString?`?${paramsString}`:'');};exports.resolveHref=resolveHref;function createQualifiedPathname(pathname,params){for(const[key,value='']of Object.entries(params)){const dynamicKey=`[${key}]`;const deepDynamicKey=`[...${key}]`;if(pathname.includes(dynamicKey)){pathname=pathname.replace(dynamicKey,encodeParam(value));}else if(pathname.includes(deepDynamicKey)){pathname=pathname.replace(deepDynamicKey,encodeParam(value));}else{continue;}delete params[key];}return{pathname,params};}function encodeParam(param){if(Array.isArray(param)){return param.map(p=>encodeParam(p)).join('/');}return encodeURIComponent(param.toString());}function createQueryParams(params){return Object.entries(params).filter(([,value])=>value!=null).map(([key,value])=>`${key}=${encodeURIComponent(value.toString())}`).join('&');}","map":{"version":3,"names":["resolveHref","href","exports","pathname","path","params","createQualifiedPathname","_objectSpread","paramsString","createQueryParams","key","value","Object","entries","dynamicKey","deepDynamicKey","includes","replace","encodeParam","param","Array","isArray","map","p","join","encodeURIComponent","toString","filter"],"sources":["/Users/apple/FounderFinder/node_modules/expo-router/src/link/href.ts"],"sourcesContent":["import { ExpoRouter } from '../../types/expo-router';\n\n/** Resolve an href object into a fully qualified, relative href. */\nexport const resolveHref = (href: ExpoRouter.Href): string => {\n  if (typeof href === 'string') {\n    return resolveHref({ pathname: href });\n  }\n  const path = href.pathname ?? '';\n  if (!href?.params) {\n    return path;\n  }\n  const { pathname, params } = createQualifiedPathname(path, {\n    ...href.params,\n  });\n  const paramsString = createQueryParams(params);\n  return pathname + (paramsString ? `?${paramsString}` : '');\n};\n\nfunction createQualifiedPathname(\n  pathname: string,\n  params: Record<string, any>\n): { pathname: string; params: ExpoRouter.UnknownInputParams } {\n  for (const [key, value = ''] of Object.entries(params)) {\n    const dynamicKey = `[${key}]`;\n    const deepDynamicKey = `[...${key}]`;\n    if (pathname.includes(dynamicKey)) {\n      pathname = pathname.replace(dynamicKey, encodeParam(value));\n    } else if (pathname.includes(deepDynamicKey)) {\n      pathname = pathname.replace(deepDynamicKey, encodeParam(value));\n    } else {\n      continue;\n    }\n\n    delete params[key];\n  }\n  return { pathname, params };\n}\n\nfunction encodeParam(param: any): string {\n  if (Array.isArray(param)) {\n    return param.map((p) => encodeParam(p)).join('/');\n  }\n\n  return encodeURIComponent(param.toString());\n}\n\nfunction createQueryParams(params: Record<string, any>): string {\n  return (\n    Object.entries(params)\n      // Allow nullish params\n      .filter(([, value]) => value != null)\n      .map(([key, value]) => `${key}=${encodeURIComponent(value.toString())}`)\n      .join('&')\n  );\n}\n"],"mappings":"kxBAGO,KAAM,CAAAA,WAAW,CAAIC,IAAqB,EAAY,CAC3D,GAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,CAAE,CAC5B,MAAO,GAAAC,OAAA,CAAAF,WAAW,EAAC,CAAEG,QAAQ,CAAEF,IAAI,CAAE,CAAC,C,CAExC,KAAM,CAAAG,IAAI,CAAGH,IAAI,CAACE,QAAQ,EAAI,EAAE,CAChC,GAAI,CAACF,IAAI,EAAEI,MAAM,CAAE,CACjB,MAAO,CAAAD,IAAI,C,CAEb,KAAM,CAAED,QAAQ,CAAEE,MAAM,CAAE,CAAGC,uBAAuB,CAACF,IAAI,CAAAG,aAAA,IACpDN,IAAI,CAACI,MAAM,CACf,CAAC,CACF,KAAM,CAAAG,YAAY,CAAGC,iBAAiB,CAACJ,MAAM,CAAC,CAC9C,MAAO,CAAAF,QAAQ,EAAIK,YAAY,CAAG,IAAIA,YAAY,EAAE,CAAG,EAAE,CAAC,CAC5D,CAAC,CAbYN,OAAA,CAAAF,WAAW,CAAAA,WAAA,CAexB,QAAS,CAAAM,uBAAuBA,CAC9BH,QAAgB,CAChBE,MAA2B,EAE3B,IAAK,KAAM,CAACK,GAAG,CAAEC,KAAK,CAAG,EAAE,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACR,MAAM,CAAC,CAAE,CACtD,KAAM,CAAAS,UAAU,CAAG,IAAIJ,GAAG,GAAG,CAC7B,KAAM,CAAAK,cAAc,CAAG,OAAOL,GAAG,GAAG,CACpC,GAAIP,QAAQ,CAACa,QAAQ,CAACF,UAAU,CAAC,CAAE,CACjCX,QAAQ,CAAGA,QAAQ,CAACc,OAAO,CAACH,UAAU,CAAEI,WAAW,CAACP,KAAK,CAAC,CAAC,C,CAC5D,IAAM,IAAIR,QAAQ,CAACa,QAAQ,CAACD,cAAc,CAAC,CAAE,CAC5CZ,QAAQ,CAAGA,QAAQ,CAACc,OAAO,CAACF,cAAc,CAAEG,WAAW,CAACP,KAAK,CAAC,CAAC,C,CAChE,IAAM,CACL,S,CAGF,MAAO,CAAAN,MAAM,CAACK,GAAG,CAAC,C,CAEpB,MAAO,CAAEP,QAAQ,CAAEE,MAAM,CAAE,CAC7B,CAEA,QAAS,CAAAa,WAAWA,CAACC,KAAU,EAC7B,GAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAE,CACxB,MAAO,CAAAA,KAAK,CAACG,GAAG,CAAEC,CAAC,EAAKL,WAAW,CAACK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,C,CAGnD,MAAO,CAAAC,kBAAkB,CAACN,KAAK,CAACO,QAAQ,EAAE,CAAC,CAC7C,CAEA,QAAS,CAAAjB,iBAAiBA,CAACJ,MAA2B,EACpD,MACE,CAAAO,MAAM,CAACC,OAAO,CAACR,MAAM,CAAC,CAEnBsB,MAAM,CAAC,CAAC,EAAGhB,KAAK,CAAC,GAAKA,KAAK,EAAI,IAAI,CAAC,CACpCW,GAAG,CAAC,CAAC,CAACZ,GAAG,CAAEC,KAAK,CAAC,GAAK,GAAGD,GAAG,IAAIe,kBAAkB,CAACd,KAAK,CAACe,QAAQ,EAAE,CAAC,EAAE,CAAC,CACvEF,IAAI,CAAC,GAAG,CAAC,CAEhB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}