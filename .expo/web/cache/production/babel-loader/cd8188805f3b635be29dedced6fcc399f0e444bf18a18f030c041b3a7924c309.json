{"ast":null,"code":"import invariant from'invariant';const listeners=[];export default{addEventListener(type,listener){if(false){return{remove(){}};}invariant(type==='url',`Linking.addEventListener(): ${type} is not a valid event`);const nativeListener=nativeEvent=>listener({url:window.location.href,nativeEvent});listeners.push({listener,nativeListener});window.addEventListener('message',nativeListener,false);return{remove:()=>{this.removeEventListener(type,listener);}};},removeEventListener(type,listener){if(false){return;}invariant(type==='url',`Linking.addEventListener(): ${type} is not a valid event`);const listenerIndex=listeners.findIndex(pair=>pair.listener===listener);invariant(listenerIndex!==-1,'Linking.removeEventListener(): cannot remove an unregistered event listener.');const nativeListener=listeners[listenerIndex].nativeListener;window.removeEventListener('message',nativeListener,false);listeners.splice(listenerIndex,1);},async canOpenURL(){return true;},async getInitialURL(){if(false)return'';return window.location.href;},async openURL(url){if(true){window.location=new URL(url,window.location).toString();}}};","map":{"version":3,"names":["invariant","listeners","addEventListener","type","listener","remove","nativeListener","nativeEvent","url","window","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","getInitialURL","openURL","URL","toString"],"sources":["/Users/apple/FounderFinder/node_modules/expo-linking/src/ExpoLinking.web.ts"],"sourcesContent":["import invariant from 'invariant';\n\nimport { NativeURLListener, URLListener } from './Linking.types';\n\nconst listeners: { listener: URLListener; nativeListener: NativeURLListener }[] = [];\n\nexport default {\n  addEventListener(type: 'url', listener: URLListener): { remove(): void } {\n    // Do nothing in Node.js environments\n    if (typeof window === 'undefined') {\n      return { remove() {} };\n    }\n\n    invariant(type === 'url', `Linking.addEventListener(): ${type} is not a valid event`);\n    const nativeListener: NativeURLListener = (nativeEvent) =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n    return {\n      remove: () => {\n        this.removeEventListener(type, listener);\n      },\n    };\n  },\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    // Do nothing in Node.js environments\n    if (typeof window === 'undefined') {\n      return;\n    }\n    invariant(type === 'url', `Linking.addEventListener(): ${type} is not a valid event`);\n    const listenerIndex = listeners.findIndex((pair) => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n\n  async canOpenURL(): Promise<boolean> {\n    // In reality this should be able to return false for links like `chrome://` on chrome.\n    return true;\n  },\n\n  async getInitialURL(): Promise<string> {\n    if (typeof window === 'undefined') return '';\n    return window.location.href;\n  },\n\n  async openURL(url: string): Promise<void> {\n    if (typeof window !== 'undefined') {\n      // @ts-ignore\n      window.location = new URL(url, window.location).toString();\n    }\n  },\n};\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,WAAW,CAIjC,KAAM,CAAAC,SAAS,CAAmE,EAAE,CAEpF,cAAe,CACbC,gBAAgBA,CAACC,IAAW,CAAEC,QAAqB,EAEjD,SAAmC,CACjC,MAAO,CAAEC,MAAMA,CAAA,EAAI,CAAC,CAAE,C,CAGxBL,SAAS,CAACG,IAAI,GAAK,KAAK,CAAE,+BAA+BA,IAAI,uBAAuB,CAAC,CACrF,KAAM,CAAAG,cAAc,CAAuBC,WAAW,EACpDH,QAAQ,CAAC,CAAEI,GAAG,CAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAEJ,WAAW,CAAE,CAAC,CACtDN,SAAS,CAACW,IAAI,CAAC,CAAER,QAAQ,CAAEE,cAAc,CAAE,CAAC,CAC5CG,MAAM,CAACP,gBAAgB,CAAC,SAAS,CAAEI,cAAc,CAAE,KAAK,CAAC,CACzD,MAAO,CACLD,MAAM,CAAEA,CAAA,GAAK,CACX,IAAI,CAACQ,mBAAmB,CAACV,IAAI,CAAEC,QAAQ,CAAC,CAC1C,C,CACD,CACH,CAAC,CAEDS,mBAAmBA,CAACV,IAAW,CAAEC,QAAqB,EAEpD,SAAmC,CACjC,O,CAEFJ,SAAS,CAACG,IAAI,GAAK,KAAK,CAAE,+BAA+BA,IAAI,uBAAuB,CAAC,CACrF,KAAM,CAAAW,aAAa,CAAGb,SAAS,CAACc,SAAS,CAAEC,IAAI,EAAKA,IAAI,CAACZ,QAAQ,GAAKA,QAAQ,CAAC,CAC/EJ,SAAS,CACPc,aAAa,GAAK,CAAC,CAAC,CACpB,8EAA8E,CAC/E,CACD,KAAM,CAAAR,cAAc,CAAGL,SAAS,CAACa,aAAa,CAAC,CAACR,cAAc,CAC9DG,MAAM,CAACI,mBAAmB,CAAC,SAAS,CAAEP,cAAc,CAAE,KAAK,CAAC,CAC5DL,SAAS,CAACgB,MAAM,CAACH,aAAa,CAAE,CAAC,CAAC,CACpC,CAAC,CAED,KAAM,CAAAI,UAAUA,CAAA,EAEd,MAAO,KAAI,CACb,CAAC,CAED,KAAM,CAAAC,aAAaA,CAAA,EACjB,SAAmC,MAAO,EAAE,CAC5C,MAAO,CAAAV,MAAM,CAACC,QAAQ,CAACC,IAAI,CAC7B,CAAC,CAED,KAAM,CAAAS,OAAOA,CAACZ,GAAW,EACvB,QAAmC,CAEjCC,MAAM,CAACC,QAAQ,CAAG,GAAI,CAAAW,GAAG,CAACb,GAAG,CAAEC,MAAM,CAACC,QAAQ,CAAC,CAACY,QAAQ,EAAE,C,CAE9D,C,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}