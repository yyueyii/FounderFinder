{"ast":null,"code":"var warnedKeys={};export function warnOnce(key,message){if(false){if(warnedKeys[key]){return;}console.warn(message);warnedKeys[key]=true;}}","map":{"version":3,"names":["warnedKeys","warnOnce","key","message","console","warn"],"sources":["/Users/apple/FounderFinder/node_modules/react-native-web/dist/modules/warnOnce/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar warnedKeys = {};\n\n/**\n * A simple function that prints a warning message once per session.\n *\n * @param {string} key - The key used to ensure the message is printed once.\n *                       This should be unique to the callsite.\n * @param {string} message - The message to print\n */\nexport function warnOnce(key, message) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (warnedKeys[key]) {\n      return;\n    }\n    console.warn(message);\n    warnedKeys[key] = true;\n  }\n}"],"mappings":"AASA,GAAI,CAAAA,UAAU,CAAG,CAAC,CAAC,CASnB,MAAO,SAAS,CAAAC,QAAQA,CAACC,GAAG,CAAEC,OAAO,CAAE,CACrC,SAA2C,CACzC,GAAIH,UAAU,CAACE,GAAG,CAAC,CAAE,CACnB,OACF,CACAE,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC,CACrBH,UAAU,CAACE,GAAG,CAAC,CAAG,IAAI,CACxB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}