{"ast":null,"code":"import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Platform from\"react-native-web/dist/exports/Platform\";export function ensureNativeModulesAreInstalled(){if(globalThis.expo){return;}try{if(true){require('./web');}else{NativeModules.ExpoModulesCore?.installModules();}}catch(error){console.error(`Unable to install Expo modules: ${error}`);}}","map":{"version":3,"names":["ensureNativeModulesAreInstalled","globalThis","expo","require","NativeModules","ExpoModulesCore","installModules","error","console"],"sources":["/Users/apple/FounderFinder/node_modules/expo-modules-core/src/ensureNativeModulesAreInstalled.ts"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\n/**\n * Ensures that the native modules are installed in the current runtime.\n * Otherwise, it synchronously calls a native function that installs them.\n */\nexport function ensureNativeModulesAreInstalled(): void {\n  if (globalThis.expo) {\n    return;\n  }\n  try {\n    if (Platform.OS === 'web') {\n      // Requiring web folder sets up the `globalThis.expo` object.\n      require('./web');\n    } else {\n      // TODO: ExpoModulesCore shouldn't be optional here,\n      // but to keep backwards compatibility let's just ignore it in SDK 50.\n      // In most cases the modules were already installed from the native side.\n      NativeModules.ExpoModulesCore?.installModules();\n    }\n  } catch (error) {\n    console.error(`Unable to install Expo modules: ${error}`);\n  }\n}\n"],"mappings":"oIAMA,MAAM,SAAU,CAAAA,+BAA+BA,CAAA,EAC7C,GAAIC,UAAU,CAACC,IAAI,CAAE,CACnB,O,CAEF,GAAI,CACF,QAA2B,CAEzBC,OAAO,CAAC,OAAO,CAAC,C,CACjB,IAAM,CAILC,aAAa,CAACC,eAAe,EAAEC,cAAc,EAAE,C,EAEjD,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCA,KAAK,EAAE,CAAC,C,CAE7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}