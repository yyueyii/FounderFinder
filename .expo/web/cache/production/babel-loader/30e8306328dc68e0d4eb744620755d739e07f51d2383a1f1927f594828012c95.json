{"ast":null,"code":"import{getActionFromState,getStateFromPath,NavigationContainerRefContext}from'@react-navigation/core';import*as React from'react';import LinkingContext from'./LinkingContext';export default function useLinkTo(){const navigation=React.useContext(NavigationContainerRefContext);const linking=React.useContext(LinkingContext);const linkTo=React.useCallback(to=>{if(navigation===undefined){throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");}if(typeof to!=='string'){navigation.navigate(to.screen,to.params);return;}if(!to.startsWith('/')){throw new Error(`The path must start with '/' (${to}).`);}const{options}=linking;const state=options!==null&&options!==void 0&&options.getStateFromPath?options.getStateFromPath(to,options.config):getStateFromPath(to,options===null||options===void 0?void 0:options.config);if(state){const action=getActionFromState(state,options===null||options===void 0?void 0:options.config);if(action!==undefined){navigation.dispatch(action);}else{navigation.reset(state);}}else{throw new Error('Failed to parse the path to a navigation state.');}},[linking,navigation]);return linkTo;}","map":{"version":3,"names":["getActionFromState","getStateFromPath","NavigationContainerRefContext","React","LinkingContext","useLinkTo","navigation","useContext","linking","linkTo","useCallback","to","undefined","Error","navigate","screen","params","startsWith","options","state","config","action","dispatch","reset"],"sources":["/Users/apple/FounderFinder/node_modules/@react-navigation/native/src/useLinkTo.tsx"],"sourcesContent":["import {\n  getActionFromState,\n  getStateFromPath,\n  NavigationContainerRefContext,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\nexport type To<\n  ParamList extends ReactNavigation.RootParamList = ReactNavigation.RootParamList,\n  RouteName extends keyof ParamList = keyof ParamList\n> =\n  | string\n  | (undefined extends ParamList[RouteName]\n      ? {\n          screen: Extract<RouteName, string>;\n          params?: ParamList[RouteName];\n        }\n      : {\n          screen: Extract<RouteName, string>;\n          params: ParamList[RouteName];\n        });\n\nexport default function useLinkTo<\n  ParamList extends ReactNavigation.RootParamList\n>() {\n  const navigation = React.useContext(NavigationContainerRefContext);\n  const linking = React.useContext(LinkingContext);\n\n  const linkTo = React.useCallback(\n    (to: To<ParamList>) => {\n      if (navigation === undefined) {\n        throw new Error(\n          \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n        );\n      }\n\n      if (typeof to !== 'string') {\n        // @ts-expect-error: This is fine\n        navigation.navigate(to.screen, to.params);\n        return;\n      }\n\n      if (!to.startsWith('/')) {\n        throw new Error(`The path must start with '/' (${to}).`);\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(to, options.config)\n        : getStateFromPath(to, options?.config);\n\n      if (state) {\n        const action = getActionFromState(state, options?.config);\n\n        if (action !== undefined) {\n          navigation.dispatch(action);\n        } else {\n          navigation.reset(state);\n        }\n      } else {\n        throw new Error('Failed to parse the path to a navigation state.');\n      }\n    },\n    [linking, navigation]\n  );\n\n  return linkTo;\n}\n"],"mappings":"AAAA,OACEA,kBAAkB,CAClBC,gBAAgB,CAChBC,6BAA6B,KACxB,wBAAwB,CAC/B,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAE9B,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAiB7C,cAAe,SAAS,CAAAC,SAASA,CAAA,CAE7B,CACF,KAAM,CAAAC,UAAU,CAAGH,KAAK,CAACI,UAAU,CAACL,6BAA6B,CAAC,CAClE,KAAM,CAAAM,OAAO,CAAGL,KAAK,CAACI,UAAU,CAACH,cAAc,CAAC,CAEhD,KAAM,CAAAK,MAAM,CAAGN,KAAK,CAACO,WAAW,CAC7BC,EAAiB,EAAK,CACrB,GAAIL,UAAU,GAAKM,SAAS,CAAE,CAC5B,KAAM,IAAI,CAAAC,KAAK,CACb,kFAAkF,CACnF,CACH,CAEA,GAAI,MAAO,CAAAF,EAAE,GAAK,QAAQ,CAAE,CAE1BL,UAAU,CAACQ,QAAQ,CAACH,EAAE,CAACI,MAAM,CAAEJ,EAAE,CAACK,MAAM,CAAC,CACzC,OACF,CAEA,GAAI,CAACL,EAAE,CAACM,UAAU,CAAC,GAAG,CAAC,CAAE,CACvB,KAAM,IAAI,CAAAJ,KAAK,CAAE,iCAAgCF,EAAG,IAAG,CAAC,CAC1D,CAEA,KAAM,CAAEO,OAAQ,CAAC,CAAGV,OAAO,CAE3B,KAAM,CAAAW,KAAK,CAAGD,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAEjB,gBAAgB,CACnCiB,OAAO,CAACjB,gBAAgB,CAACU,EAAE,CAAEO,OAAO,CAACE,MAAM,CAAC,CAC5CnB,gBAAgB,CAACU,EAAE,CAAEO,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEE,MAAM,CAAC,CAEzC,GAAID,KAAK,CAAE,CACT,KAAM,CAAAE,MAAM,CAAGrB,kBAAkB,CAACmB,KAAK,CAAED,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEE,MAAM,CAAC,CAEzD,GAAIC,MAAM,GAAKT,SAAS,CAAE,CACxBN,UAAU,CAACgB,QAAQ,CAACD,MAAM,CAAC,CAC7B,CAAC,IAAM,CACLf,UAAU,CAACiB,KAAK,CAACJ,KAAK,CAAC,CACzB,CACF,CAAC,IAAM,CACL,KAAM,IAAI,CAAAN,KAAK,CAAC,iDAAiD,CAAC,CACpE,CACF,CAAC,CACD,CAACL,OAAO,CAAEF,UAAU,CAAC,CACtB,CAED,MAAO,CAAAG,MAAM,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}