{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/objectSpread2\";import invariant from'fbjs/lib/invariant';export class CellRenderMask{constructor(numCells){invariant(numCells>=0,'CellRenderMask must contain a non-negative number os cells');this._numCells=numCells;if(numCells===0){this._regions=[];}else{this._regions=[{first:0,last:numCells-1,isSpacer:true}];}}enumerateRegions(){return this._regions;}addCells(cells){invariant(cells.first>=0&&cells.first<this._numCells&&cells.last>=-1&&cells.last<this._numCells&&cells.last>=cells.first-1,'CellRenderMask.addCells called with invalid cell range');if(cells.last<cells.first){return;}var _this$_findRegion=this._findRegion(cells.first),firstIntersect=_this$_findRegion[0],firstIntersectIdx=_this$_findRegion[1];var _this$_findRegion2=this._findRegion(cells.last),lastIntersect=_this$_findRegion2[0],lastIntersectIdx=_this$_findRegion2[1];if(firstIntersectIdx===lastIntersectIdx&&!firstIntersect.isSpacer){return;}var newLeadRegion=[];var newTailRegion=[];var newMainRegion=_objectSpread(_objectSpread({},cells),{},{isSpacer:false});if(firstIntersect.first<newMainRegion.first){if(firstIntersect.isSpacer){newLeadRegion.push({first:firstIntersect.first,last:newMainRegion.first-1,isSpacer:true});}else{newMainRegion.first=firstIntersect.first;}}if(lastIntersect.last>newMainRegion.last){if(lastIntersect.isSpacer){newTailRegion.push({first:newMainRegion.last+1,last:lastIntersect.last,isSpacer:true});}else{newMainRegion.last=lastIntersect.last;}}var replacementRegions=[...newLeadRegion,newMainRegion,...newTailRegion];var numRegionsToDelete=lastIntersectIdx-firstIntersectIdx+1;this._regions.splice(firstIntersectIdx,numRegionsToDelete,...replacementRegions);}numCells(){return this._numCells;}equals(other){return this._numCells===other._numCells&&this._regions.length===other._regions.length&&this._regions.every((region,i)=>region.first===other._regions[i].first&&region.last===other._regions[i].last&&region.isSpacer===other._regions[i].isSpacer);}_findRegion(cellIdx){var firstIdx=0;var lastIdx=this._regions.length-1;while(firstIdx<=lastIdx){var middleIdx=Math.floor((firstIdx+lastIdx)/2);var middleRegion=this._regions[middleIdx];if(cellIdx>=middleRegion.first&&cellIdx<=middleRegion.last){return[middleRegion,middleIdx];}else if(cellIdx<middleRegion.first){lastIdx=middleIdx-1;}else if(cellIdx>middleRegion.last){firstIdx=middleIdx+1;}}invariant(false,\"A region was not found containing cellIdx \"+cellIdx);}}","map":{"version":3,"names":["_objectSpread","invariant","CellRenderMask","constructor","numCells","_numCells","_regions","first","last","isSpacer","enumerateRegions","addCells","cells","_this$_findRegion","_findRegion","firstIntersect","firstIntersectIdx","_this$_findRegion2","lastIntersect","lastIntersectIdx","newLeadRegion","newTailRegion","newMainRegion","push","replacementRegions","numRegionsToDelete","splice","equals","other","length","every","region","i","cellIdx","firstIdx","lastIdx","middleIdx","Math","floor","middleRegion"],"sources":["/Users/apple/FounderFinder/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/CellRenderMask.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport class CellRenderMask {\n  constructor(numCells) {\n    invariant(numCells >= 0, 'CellRenderMask must contain a non-negative number os cells');\n    this._numCells = numCells;\n    if (numCells === 0) {\n      this._regions = [];\n    } else {\n      this._regions = [{\n        first: 0,\n        last: numCells - 1,\n        isSpacer: true\n      }];\n    }\n  }\n  enumerateRegions() {\n    return this._regions;\n  }\n  addCells(cells) {\n    invariant(cells.first >= 0 && cells.first < this._numCells && cells.last >= -1 && cells.last < this._numCells && cells.last >= cells.first - 1, 'CellRenderMask.addCells called with invalid cell range');\n\n    // VirtualizedList uses inclusive ranges, where zero-count states are\n    // possible. E.g. [0, -1] for no cells, starting at 0.\n    if (cells.last < cells.first) {\n      return;\n    }\n    var _this$_findRegion = this._findRegion(cells.first),\n      firstIntersect = _this$_findRegion[0],\n      firstIntersectIdx = _this$_findRegion[1];\n    var _this$_findRegion2 = this._findRegion(cells.last),\n      lastIntersect = _this$_findRegion2[0],\n      lastIntersectIdx = _this$_findRegion2[1];\n\n    // Fast-path if the cells to add are already all present in the mask. We\n    // will otherwise need to do some mutation.\n    if (firstIntersectIdx === lastIntersectIdx && !firstIntersect.isSpacer) {\n      return;\n    }\n\n    // We need to replace the existing covered regions with 1-3 new regions\n    // depending whether we need to split spacers out of overlapping regions.\n    var newLeadRegion = [];\n    var newTailRegion = [];\n    var newMainRegion = _objectSpread(_objectSpread({}, cells), {}, {\n      isSpacer: false\n    });\n    if (firstIntersect.first < newMainRegion.first) {\n      if (firstIntersect.isSpacer) {\n        newLeadRegion.push({\n          first: firstIntersect.first,\n          last: newMainRegion.first - 1,\n          isSpacer: true\n        });\n      } else {\n        newMainRegion.first = firstIntersect.first;\n      }\n    }\n    if (lastIntersect.last > newMainRegion.last) {\n      if (lastIntersect.isSpacer) {\n        newTailRegion.push({\n          first: newMainRegion.last + 1,\n          last: lastIntersect.last,\n          isSpacer: true\n        });\n      } else {\n        newMainRegion.last = lastIntersect.last;\n      }\n    }\n    var replacementRegions = [...newLeadRegion, newMainRegion, ...newTailRegion];\n    var numRegionsToDelete = lastIntersectIdx - firstIntersectIdx + 1;\n    this._regions.splice(firstIntersectIdx, numRegionsToDelete, ...replacementRegions);\n  }\n  numCells() {\n    return this._numCells;\n  }\n  equals(other) {\n    return this._numCells === other._numCells && this._regions.length === other._regions.length && this._regions.every((region, i) => region.first === other._regions[i].first && region.last === other._regions[i].last && region.isSpacer === other._regions[i].isSpacer);\n  }\n  _findRegion(cellIdx) {\n    var firstIdx = 0;\n    var lastIdx = this._regions.length - 1;\n    while (firstIdx <= lastIdx) {\n      var middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n      var middleRegion = this._regions[middleIdx];\n      if (cellIdx >= middleRegion.first && cellIdx <= middleRegion.last) {\n        return [middleRegion, middleIdx];\n      } else if (cellIdx < middleRegion.first) {\n        lastIdx = middleIdx - 1;\n      } else if (cellIdx > middleRegion.last) {\n        firstIdx = middleIdx + 1;\n      }\n    }\n    invariant(false, \"A region was not found containing cellIdx \" + cellIdx);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}