{"ast":null,"code":"var CSS_UNIT_RE=/^[+-]?\\d*(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?(%|\\w*)/;var getUnit=str=>str.match(CSS_UNIT_RE)[1];var isNumeric=n=>{return!isNaN(parseFloat(n))&&isFinite(n);};var multiplyStyleLengthValue=(value,multiple)=>{if(typeof value==='string'){var number=parseFloat(value)*multiple;var unit=getUnit(value);return\"\"+number+unit;}else if(isNumeric(value)){return value*multiple;}};export default multiplyStyleLengthValue;","map":{"version":3,"names":["CSS_UNIT_RE","getUnit","str","match","isNumeric","n","isNaN","parseFloat","isFinite","multiplyStyleLengthValue","value","multiple","number","unit"],"sources":["/Users/apple/FounderFinder/node_modules/react-native-web/dist/modules/multiplyStyleLengthValue/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar CSS_UNIT_RE = /^[+-]?\\d*(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?(%|\\w*)/;\nvar getUnit = str => str.match(CSS_UNIT_RE)[1];\nvar isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\nvar multiplyStyleLengthValue = (value, multiple) => {\n  if (typeof value === 'string') {\n    var number = parseFloat(value) * multiple;\n    var unit = getUnit(value);\n    return \"\" + number + unit;\n  } else if (isNumeric(value)) {\n    return value * multiple;\n  }\n};\nexport default multiplyStyleLengthValue;"],"mappings":"AASA,GAAI,CAAAA,WAAW,CAAG,6CAA6C,CAC/D,GAAI,CAAAC,OAAO,CAAGC,GAAG,EAAIA,GAAG,CAACC,KAAK,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,CAC9C,GAAI,CAAAI,SAAS,CAAGC,CAAC,EAAI,CACnB,MAAO,CAACC,KAAK,CAACC,UAAU,CAACF,CAAC,CAAC,CAAC,EAAIG,QAAQ,CAACH,CAAC,CAAC,CAC7C,CAAC,CACD,GAAI,CAAAI,wBAAwB,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CAClD,GAAI,MAAO,CAAAD,KAAK,GAAK,QAAQ,CAAE,CAC7B,GAAI,CAAAE,MAAM,CAAGL,UAAU,CAACG,KAAK,CAAC,CAAGC,QAAQ,CACzC,GAAI,CAAAE,IAAI,CAAGZ,OAAO,CAACS,KAAK,CAAC,CACzB,MAAO,EAAE,CAAGE,MAAM,CAAGC,IAAI,CAC3B,CAAC,IAAM,IAAIT,SAAS,CAACM,KAAK,CAAC,CAAE,CAC3B,MAAO,CAAAA,KAAK,CAAGC,QAAQ,CACzB,CACF,CAAC,CACD,cAAe,CAAAF,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}