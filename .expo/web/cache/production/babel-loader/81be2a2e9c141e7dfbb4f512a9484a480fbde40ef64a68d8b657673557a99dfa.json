{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/objectSpread2\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";var _excluded=[\"contentContainerStyle\",\"horizontal\",\"onContentSizeChange\",\"refreshControl\",\"stickyHeaderIndices\",\"pagingEnabled\",\"forwardedRef\",\"keyboardDismissMode\",\"onScroll\",\"centerContent\"];import Dimensions from'../Dimensions';import dismissKeyboard from'../../modules/dismissKeyboard';import invariant from'fbjs/lib/invariant';import mergeRefs from'../../modules/mergeRefs';import Platform from'../Platform';import ScrollViewBase from'./ScrollViewBase';import StyleSheet from'../StyleSheet';import TextInputState from'../../modules/TextInputState';import UIManager from'../UIManager';import View from'../View';import React from'react';import warning from'fbjs/lib/warning';var emptyObject={};var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;class ScrollView extends React.Component{constructor(){super(...arguments);this._scrollNodeRef=null;this._innerViewRef=null;this.isTouching=false;this.lastMomentumScrollBeginTime=0;this.lastMomentumScrollEndTime=0;this.observedScrollSinceBecomingResponder=false;this.becameResponderWhileAnimating=false;this.scrollResponderHandleScrollShouldSetResponder=()=>{return this.isTouching;};this.scrollResponderHandleStartShouldSetResponderCapture=e=>{return this.scrollResponderIsAnimating();};this.scrollResponderHandleTerminationRequest=()=>{return!this.observedScrollSinceBecomingResponder;};this.scrollResponderHandleTouchEnd=e=>{var nativeEvent=e.nativeEvent;this.isTouching=nativeEvent.touches.length!==0;this.props.onTouchEnd&&this.props.onTouchEnd(e);};this.scrollResponderHandleResponderRelease=e=>{this.props.onResponderRelease&&this.props.onResponderRelease(e);var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();if(!this.props.keyboardShouldPersistTaps&&currentlyFocusedTextInput!=null&&e.target!==currentlyFocusedTextInput&&!this.observedScrollSinceBecomingResponder&&!this.becameResponderWhileAnimating){this.props.onScrollResponderKeyboardDismissed&&this.props.onScrollResponderKeyboardDismissed(e);TextInputState.blurTextInput(currentlyFocusedTextInput);}};this.scrollResponderHandleScroll=e=>{this.observedScrollSinceBecomingResponder=true;this.props.onScroll&&this.props.onScroll(e);};this.scrollResponderHandleResponderGrant=e=>{this.observedScrollSinceBecomingResponder=false;this.props.onResponderGrant&&this.props.onResponderGrant(e);this.becameResponderWhileAnimating=this.scrollResponderIsAnimating();};this.scrollResponderHandleScrollBeginDrag=e=>{this.props.onScrollBeginDrag&&this.props.onScrollBeginDrag(e);};this.scrollResponderHandleScrollEndDrag=e=>{this.props.onScrollEndDrag&&this.props.onScrollEndDrag(e);};this.scrollResponderHandleMomentumScrollBegin=e=>{this.lastMomentumScrollBeginTime=Date.now();this.props.onMomentumScrollBegin&&this.props.onMomentumScrollBegin(e);};this.scrollResponderHandleMomentumScrollEnd=e=>{this.lastMomentumScrollEndTime=Date.now();this.props.onMomentumScrollEnd&&this.props.onMomentumScrollEnd(e);};this.scrollResponderHandleTouchStart=e=>{this.isTouching=true;this.props.onTouchStart&&this.props.onTouchStart(e);};this.scrollResponderHandleTouchMove=e=>{this.props.onTouchMove&&this.props.onTouchMove(e);};this.scrollResponderIsAnimating=()=>{var now=Date.now();var timeSinceLastMomentumScrollEnd=now-this.lastMomentumScrollEndTime;var isAnimating=timeSinceLastMomentumScrollEnd<IS_ANIMATING_TOUCH_START_THRESHOLD_MS||this.lastMomentumScrollEndTime<this.lastMomentumScrollBeginTime;return isAnimating;};this.scrollResponderScrollTo=(x,y,animated)=>{if(typeof x==='number'){console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');}else{var _ref=x||emptyObject;x=_ref.x;y=_ref.y;animated=_ref.animated;}var node=this.getScrollableNode();var left=x||0;var top=y||0;if(node!=null){if(typeof node.scroll==='function'){node.scroll({top,left,behavior:!animated?'auto':'smooth'});}else{node.scrollLeft=left;node.scrollTop=top;}}};this.scrollResponderZoomTo=(rect,animated)=>{if(true){invariant('zoomToRect is not implemented');}};this.scrollResponderScrollNativeHandleToKeyboard=(nodeHandle,additionalOffset,preventNegativeScrollOffset)=>{this.additionalScrollOffset=additionalOffset||0;this.preventNegativeScrollOffset=!!preventNegativeScrollOffset;UIManager.measureLayout(nodeHandle,this.getInnerViewNode(),this.scrollResponderTextInputFocusError,this.scrollResponderInputMeasureAndScrollToKeyboard);};this.scrollResponderInputMeasureAndScrollToKeyboard=(left,top,width,height)=>{var keyboardScreenY=Dimensions.get('window').height;if(this.keyboardWillOpenTo){keyboardScreenY=this.keyboardWillOpenTo.endCoordinates.screenY;}var scrollOffsetY=top-keyboardScreenY+height+this.additionalScrollOffset;if(this.preventNegativeScrollOffset){scrollOffsetY=Math.max(0,scrollOffsetY);}this.scrollResponderScrollTo({x:0,y:scrollOffsetY,animated:true});this.additionalOffset=0;this.preventNegativeScrollOffset=false;};this.scrollResponderKeyboardWillShow=e=>{this.keyboardWillOpenTo=e;this.props.onKeyboardWillShow&&this.props.onKeyboardWillShow(e);};this.scrollResponderKeyboardWillHide=e=>{this.keyboardWillOpenTo=null;this.props.onKeyboardWillHide&&this.props.onKeyboardWillHide(e);};this.scrollResponderKeyboardDidShow=e=>{if(e){this.keyboardWillOpenTo=e;}this.props.onKeyboardDidShow&&this.props.onKeyboardDidShow(e);};this.scrollResponderKeyboardDidHide=e=>{this.keyboardWillOpenTo=null;this.props.onKeyboardDidHide&&this.props.onKeyboardDidHide(e);};this.flashScrollIndicators=()=>{this.scrollResponderFlashScrollIndicators();};this.getScrollResponder=()=>{return this;};this.getScrollableNode=()=>{return this._scrollNodeRef;};this.getInnerViewRef=()=>{return this._innerViewRef;};this.getInnerViewNode=()=>{return this._innerViewRef;};this.getNativeScrollRef=()=>{return this._scrollNodeRef;};this.scrollTo=(y,x,animated)=>{if(typeof y==='number'){console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');}else{var _ref2=y||emptyObject;x=_ref2.x;y=_ref2.y;animated=_ref2.animated;}this.scrollResponderScrollTo({x:x||0,y:y||0,animated:animated!==false});};this.scrollToEnd=options=>{var animated=(options&&options.animated)!==false;var horizontal=this.props.horizontal;var scrollResponderNode=this.getScrollableNode();var x=horizontal?scrollResponderNode.scrollWidth:0;var y=horizontal?0:scrollResponderNode.scrollHeight;this.scrollResponderScrollTo({x,y,animated});};this._handleContentOnLayout=e=>{var _e$nativeEvent$layout=e.nativeEvent.layout,width=_e$nativeEvent$layout.width,height=_e$nativeEvent$layout.height;this.props.onContentSizeChange(width,height);};this._handleScroll=e=>{if(false){if(this.props.onScroll&&this.props.scrollEventThrottle==null){console.log('You specified `onScroll` on a <ScrollView> but not '+'`scrollEventThrottle`. You will only receive one event. '+'Using `16` you get all the events but be aware that it may '+\"cause frame drops, use a bigger number if you don't need as \"+'much precision.');}}if(this.props.keyboardDismissMode==='on-drag'){dismissKeyboard();}this.scrollResponderHandleScroll(e);};this._setInnerViewRef=node=>{this._innerViewRef=node;};this._setScrollNodeRef=node=>{this._scrollNodeRef=node;if(node!=null){node.getScrollResponder=this.getScrollResponder;node.getInnerViewNode=this.getInnerViewNode;node.getInnerViewRef=this.getInnerViewRef;node.getNativeScrollRef=this.getNativeScrollRef;node.getScrollableNode=this.getScrollableNode;node.scrollTo=this.scrollTo;node.scrollToEnd=this.scrollToEnd;node.flashScrollIndicators=this.flashScrollIndicators;node.scrollResponderZoomTo=this.scrollResponderZoomTo;node.scrollResponderScrollNativeHandleToKeyboard=this.scrollResponderScrollNativeHandleToKeyboard;}var ref=mergeRefs(this.props.forwardedRef);ref(node);};}scrollResponderHandleStartShouldSetResponder(){return false;}scrollResponderHandleResponderReject(){warning(false,\"ScrollView doesn't take rejection well - scrolls anyway\");}scrollResponderFlashScrollIndicators(){}scrollResponderTextInputFocusError(e){console.error('Error measuring text field: ',e);}render(){var _this$props=this.props,contentContainerStyle=_this$props.contentContainerStyle,horizontal=_this$props.horizontal,onContentSizeChange=_this$props.onContentSizeChange,refreshControl=_this$props.refreshControl,stickyHeaderIndices=_this$props.stickyHeaderIndices,pagingEnabled=_this$props.pagingEnabled,forwardedRef=_this$props.forwardedRef,keyboardDismissMode=_this$props.keyboardDismissMode,onScroll=_this$props.onScroll,centerContent=_this$props.centerContent,other=_objectWithoutPropertiesLoose(_this$props,_excluded);if(false&&this.props.style){var style=StyleSheet.flatten(this.props.style);var childLayoutProps=['alignItems','justifyContent'].filter(prop=>style&&style[prop]!==undefined);invariant(childLayoutProps.length===0,\"ScrollView child layout (\"+JSON.stringify(childLayoutProps)+\") \"+'must be applied through the contentContainerStyle prop.');}var contentSizeChangeProps={};if(onContentSizeChange){contentSizeChangeProps={onLayout:this._handleContentOnLayout};}var hasStickyHeaderIndices=!horizontal&&Array.isArray(stickyHeaderIndices);var children=hasStickyHeaderIndices||pagingEnabled?React.Children.map(this.props.children,(child,i)=>{var isSticky=hasStickyHeaderIndices&&stickyHeaderIndices.indexOf(i)>-1;if(child!=null&&(isSticky||pagingEnabled)){return React.createElement(View,{style:[isSticky&&styles.stickyHeader,pagingEnabled&&styles.pagingEnabledChild]},child);}else{return child;}}):this.props.children;var contentContainer=React.createElement(View,_extends({},contentSizeChangeProps,{children:children,collapsable:false,ref:this._setInnerViewRef,style:[horizontal&&styles.contentContainerHorizontal,centerContent&&styles.contentContainerCenterContent,contentContainerStyle]}));var baseStyle=horizontal?styles.baseHorizontal:styles.baseVertical;var pagingEnabledStyle=horizontal?styles.pagingEnabledHorizontal:styles.pagingEnabledVertical;var props=_objectSpread(_objectSpread({},other),{},{style:[baseStyle,pagingEnabled&&pagingEnabledStyle,this.props.style],onTouchStart:this.scrollResponderHandleTouchStart,onTouchMove:this.scrollResponderHandleTouchMove,onTouchEnd:this.scrollResponderHandleTouchEnd,onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,onScroll:this._handleScroll,onResponderGrant:this.scrollResponderHandleResponderGrant,onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,onResponderTerminate:this.scrollResponderHandleTerminate,onResponderRelease:this.scrollResponderHandleResponderRelease,onResponderReject:this.scrollResponderHandleResponderReject});var ScrollViewClass=ScrollViewBase;invariant(ScrollViewClass!==undefined,'ScrollViewClass must not be undefined');var scrollView=React.createElement(ScrollViewClass,_extends({},props,{ref:this._setScrollNodeRef}),contentContainer);if(refreshControl){return React.cloneElement(refreshControl,{style:props.style},scrollView);}return scrollView;}}var commonStyle={flexGrow:1,flexShrink:1,transform:'translateZ(0)',WebkitOverflowScrolling:'touch'};var styles=StyleSheet.create({baseVertical:_objectSpread(_objectSpread({},commonStyle),{},{flexDirection:'column',overflowX:'hidden',overflowY:'auto'}),baseHorizontal:_objectSpread(_objectSpread({},commonStyle),{},{flexDirection:'row',overflowX:'auto',overflowY:'hidden'}),contentContainerHorizontal:{flexDirection:'row'},contentContainerCenterContent:{justifyContent:'center',flexGrow:1},stickyHeader:{position:'sticky',top:0,zIndex:10},pagingEnabledHorizontal:{scrollSnapType:'x mandatory'},pagingEnabledVertical:{scrollSnapType:'y mandatory'},pagingEnabledChild:{scrollSnapAlign:'start'}});var ForwardedScrollView=React.forwardRef((props,forwardedRef)=>{return React.createElement(ScrollView,_extends({},props,{forwardedRef:forwardedRef}));});ForwardedScrollView.displayName='ScrollView';export default ForwardedScrollView;","map":{"version":3,"names":["_objectSpread","_extends","_objectWithoutPropertiesLoose","_excluded","Dimensions","dismissKeyboard","invariant","mergeRefs","Platform","ScrollViewBase","StyleSheet","TextInputState","UIManager","View","React","warning","emptyObject","IS_ANIMATING_TOUCH_START_THRESHOLD_MS","ScrollView","Component","constructor","arguments","_scrollNodeRef","_innerViewRef","isTouching","lastMomentumScrollBeginTime","lastMomentumScrollEndTime","observedScrollSinceBecomingResponder","becameResponderWhileAnimating","scrollResponderHandleScrollShouldSetResponder","scrollResponderHandleStartShouldSetResponderCapture","e","scrollResponderIsAnimating","scrollResponderHandleTerminationRequest","scrollResponderHandleTouchEnd","nativeEvent","touches","length","props","onTouchEnd","scrollResponderHandleResponderRelease","onResponderRelease","currentlyFocusedTextInput","currentlyFocusedField","keyboardShouldPersistTaps","target","onScrollResponderKeyboardDismissed","blurTextInput","scrollResponderHandleScroll","onScroll","scrollResponderHandleResponderGrant","onResponderGrant","scrollResponderHandleScrollBeginDrag","onScrollBeginDrag","scrollResponderHandleScrollEndDrag","onScrollEndDrag","scrollResponderHandleMomentumScrollBegin","Date","now","onMomentumScrollBegin","scrollResponderHandleMomentumScrollEnd","onMomentumScrollEnd","scrollResponderHandleTouchStart","onTouchStart","scrollResponderHandleTouchMove","onTouchMove","timeSinceLastMomentumScrollEnd","isAnimating","scrollResponderScrollTo","x","y","animated","console","warn","_ref","node","getScrollableNode","left","top","scroll","behavior","scrollLeft","scrollTop","scrollResponderZoomTo","rect","scrollResponderScrollNativeHandleToKeyboard","nodeHandle","additionalOffset","preventNegativeScrollOffset","additionalScrollOffset","measureLayout","getInnerViewNode","scrollResponderTextInputFocusError","scrollResponderInputMeasureAndScrollToKeyboard","width","height","keyboardScreenY","get","keyboardWillOpenTo","endCoordinates","screenY","scrollOffsetY","Math","max","scrollResponderKeyboardWillShow","onKeyboardWillShow","scrollResponderKeyboardWillHide","onKeyboardWillHide","scrollResponderKeyboardDidShow","onKeyboardDidShow","scrollResponderKeyboardDidHide","onKeyboardDidHide","flashScrollIndicators","scrollResponderFlashScrollIndicators","getScrollResponder","getInnerViewRef","getNativeScrollRef","scrollTo","_ref2","scrollToEnd","options","horizontal","scrollResponderNode","scrollWidth","scrollHeight","_handleContentOnLayout","_e$nativeEvent$layout","layout","onContentSizeChange","_handleScroll","scrollEventThrottle","log","keyboardDismissMode","_setInnerViewRef","_setScrollNodeRef","ref","forwardedRef","scrollResponderHandleStartShouldSetResponder","scrollResponderHandleResponderReject","error","render","_this$props","contentContainerStyle","refreshControl","stickyHeaderIndices","pagingEnabled","centerContent","other","style","flatten","childLayoutProps","filter","prop","undefined","JSON","stringify","contentSizeChangeProps","onLayout","hasStickyHeaderIndices","Array","isArray","children","Children","map","child","i","isSticky","indexOf","createElement","styles","stickyHeader","pagingEnabledChild","contentContainer","collapsable","contentContainerHorizontal","contentContainerCenterContent","baseStyle","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onStartShouldSetResponder","onStartShouldSetResponderCapture","onScrollShouldSetResponder","onResponderTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderReject","ScrollViewClass","scrollView","cloneElement","commonStyle","flexGrow","flexShrink","transform","WebkitOverflowScrolling","create","flexDirection","overflowX","overflowY","justifyContent","position","zIndex","scrollSnapType","scrollSnapAlign","ForwardedScrollView","forwardRef","displayName"],"sources":["/Users/apple/FounderFinder/node_modules/react-native-web/dist/exports/ScrollView/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport Dimensions from '../Dimensions';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from '../../modules/mergeRefs';\nimport Platform from '../Platform';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\nimport UIManager from '../UIManager';\nimport View from '../View';\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nclass ScrollView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this._scrollNodeRef = null;\n    this._innerViewRef = null;\n    this.isTouching = false;\n    this.lastMomentumScrollBeginTime = 0;\n    this.lastMomentumScrollEndTime = 0;\n    this.observedScrollSinceBecomingResponder = false;\n    this.becameResponderWhileAnimating = false;\n    this.scrollResponderHandleScrollShouldSetResponder = () => {\n      return this.isTouching;\n    };\n    this.scrollResponderHandleStartShouldSetResponderCapture = e => {\n      // First see if we want to eat taps while the keyboard is up\n      // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      // if (!this.props.keyboardShouldPersistTaps &&\n      //   currentlyFocusedTextInput != null &&\n      //   e.target !== currentlyFocusedTextInput) {\n      //   return true;\n      // }\n      return this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleTerminationRequest = () => {\n      return !this.observedScrollSinceBecomingResponder;\n    };\n    this.scrollResponderHandleTouchEnd = e => {\n      var nativeEvent = e.nativeEvent;\n      this.isTouching = nativeEvent.touches.length !== 0;\n      this.props.onTouchEnd && this.props.onTouchEnd(e);\n    };\n    this.scrollResponderHandleResponderRelease = e => {\n      this.props.onResponderRelease && this.props.onResponderRelease(e);\n\n      // By default scroll views will unfocus a textField\n      // if another touch occurs outside of it\n      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.observedScrollSinceBecomingResponder && !this.becameResponderWhileAnimating) {\n        this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\n        TextInputState.blurTextInput(currentlyFocusedTextInput);\n      }\n    };\n    this.scrollResponderHandleScroll = e => {\n      this.observedScrollSinceBecomingResponder = true;\n      this.props.onScroll && this.props.onScroll(e);\n    };\n    this.scrollResponderHandleResponderGrant = e => {\n      this.observedScrollSinceBecomingResponder = false;\n      this.props.onResponderGrant && this.props.onResponderGrant(e);\n      this.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleScrollBeginDrag = e => {\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this.scrollResponderHandleScrollEndDrag = e => {\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this.scrollResponderHandleMomentumScrollBegin = e => {\n      this.lastMomentumScrollBeginTime = Date.now();\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this.scrollResponderHandleMomentumScrollEnd = e => {\n      this.lastMomentumScrollEndTime = Date.now();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this.scrollResponderHandleTouchStart = e => {\n      this.isTouching = true;\n      this.props.onTouchStart && this.props.onTouchStart(e);\n    };\n    this.scrollResponderHandleTouchMove = e => {\n      this.props.onTouchMove && this.props.onTouchMove(e);\n    };\n    this.scrollResponderIsAnimating = () => {\n      var now = Date.now();\n      var timeSinceLastMomentumScrollEnd = now - this.lastMomentumScrollEndTime;\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.lastMomentumScrollEndTime < this.lastMomentumScrollBeginTime;\n      return isAnimating;\n    };\n    this.scrollResponderScrollTo = (x, y, animated) => {\n      if (typeof x === 'number') {\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref = x || emptyObject;\n        x = _ref.x;\n        y = _ref.y;\n        animated = _ref.animated;\n      }\n      var node = this.getScrollableNode();\n      var left = x || 0;\n      var top = y || 0;\n      if (node != null) {\n        if (typeof node.scroll === 'function') {\n          node.scroll({\n            top,\n            left,\n            behavior: !animated ? 'auto' : 'smooth'\n          });\n        } else {\n          node.scrollLeft = left;\n          node.scrollTop = top;\n        }\n      }\n    };\n    this.scrollResponderZoomTo = (rect, animated) => {\n      if (Platform.OS !== 'ios') {\n        invariant('zoomToRect is not implemented');\n      }\n    };\n    this.scrollResponderScrollNativeHandleToKeyboard = (nodeHandle, additionalOffset, preventNegativeScrollOffset) => {\n      this.additionalScrollOffset = additionalOffset || 0;\n      this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n      UIManager.measureLayout(nodeHandle, this.getInnerViewNode(), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\n    };\n    this.scrollResponderInputMeasureAndScrollToKeyboard = (left, top, width, height) => {\n      var keyboardScreenY = Dimensions.get('window').height;\n      if (this.keyboardWillOpenTo) {\n        keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\n      }\n      var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;\n\n      // By default, this can scroll with negative offset, pulling the content\n      // down so that the target component's bottom meets the keyboard's top.\n      // If requested otherwise, cap the offset at 0 minimum to avoid content\n      // shifting down.\n      if (this.preventNegativeScrollOffset) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n      this.scrollResponderScrollTo({\n        x: 0,\n        y: scrollOffsetY,\n        animated: true\n      });\n      this.additionalOffset = 0;\n      this.preventNegativeScrollOffset = false;\n    };\n    this.scrollResponderKeyboardWillShow = e => {\n      this.keyboardWillOpenTo = e;\n      this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n    };\n    this.scrollResponderKeyboardWillHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n    };\n    this.scrollResponderKeyboardDidShow = e => {\n      // TODO(7693961): The event for DidShow is not available on iOS yet.\n      // Use the one from WillShow and do not assign.\n      if (e) {\n        this.keyboardWillOpenTo = e;\n      }\n      this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n    };\n    this.scrollResponderKeyboardDidHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n    };\n    this.flashScrollIndicators = () => {\n      this.scrollResponderFlashScrollIndicators();\n    };\n    this.getScrollResponder = () => {\n      return this;\n    };\n    this.getScrollableNode = () => {\n      return this._scrollNodeRef;\n    };\n    this.getInnerViewRef = () => {\n      return this._innerViewRef;\n    };\n    this.getInnerViewNode = () => {\n      return this._innerViewRef;\n    };\n    this.getNativeScrollRef = () => {\n      return this._scrollNodeRef;\n    };\n    this.scrollTo = (y, x, animated) => {\n      if (typeof y === 'number') {\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref2 = y || emptyObject;\n        x = _ref2.x;\n        y = _ref2.y;\n        animated = _ref2.animated;\n      }\n      this.scrollResponderScrollTo({\n        x: x || 0,\n        y: y || 0,\n        animated: animated !== false\n      });\n    };\n    this.scrollToEnd = options => {\n      // Default to true\n      var animated = (options && options.animated) !== false;\n      var horizontal = this.props.horizontal;\n      var scrollResponderNode = this.getScrollableNode();\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n      this.scrollResponderScrollTo({\n        x,\n        y,\n        animated\n      });\n    };\n    this._handleContentOnLayout = e => {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n      this.props.onContentSizeChange(width, height);\n    };\n    this._handleScroll = e => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n        }\n      }\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        dismissKeyboard();\n      }\n      this.scrollResponderHandleScroll(e);\n    };\n    this._setInnerViewRef = node => {\n      this._innerViewRef = node;\n    };\n    this._setScrollNodeRef = node => {\n      this._scrollNodeRef = node;\n      // ScrollView needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `ScrollView.scrollTo(hostNode, { x, y })` is added to React Native.\n      if (node != null) {\n        node.getScrollResponder = this.getScrollResponder;\n        node.getInnerViewNode = this.getInnerViewNode;\n        node.getInnerViewRef = this.getInnerViewRef;\n        node.getNativeScrollRef = this.getNativeScrollRef;\n        node.getScrollableNode = this.getScrollableNode;\n        node.scrollTo = this.scrollTo;\n        node.scrollToEnd = this.scrollToEnd;\n        node.flashScrollIndicators = this.flashScrollIndicators;\n        node.scrollResponderZoomTo = this.scrollResponderZoomTo;\n        node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\n      }\n      var ref = mergeRefs(this.props.forwardedRef);\n      ref(node);\n    };\n  }\n  /**\n   * ------------------------------------------------------\n   * START SCROLLRESPONDER\n   * ------------------------------------------------------\n   */\n  // Reset to false every time becomes responder. This is used to:\n  // - Determine if the scroll view has been scrolled and therefore should\n  // refuse to give up its responder lock.\n  // - Determine if releasing should dismiss the keyboard when we are in\n  // tap-to-dismiss mode (!this.props.keyboardShouldPersistTaps).\n  /**\n   * Invoke this from an `onScroll` event.\n   */\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  scrollResponderHandleStartShouldSetResponder() {\n    return false;\n  }\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not the focused input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  scrollResponderHandleResponderReject() {\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n  }\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n\n  /**\n   * Invoke this from an `onTouchEnd` event.\n   *\n   * @param {SyntheticEvent} e Event.\n   */\n\n  /**\n   * Invoke this from an `onResponderRelease` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderGrant` event.\n   */\n\n  /**\n   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n   * animation, and there's not an easy way to distinguish a drag vs. stopping\n   * momentum.\n   *\n   * Invoke this from an `onScrollBeginDrag` event.\n   */\n\n  /**\n   * Invoke this from an `onScrollEndDrag` event.\n   */\n\n  /**\n   * Invoke this from an `onMomentumScrollBegin` event.\n   */\n\n  /**\n   * Invoke this from an `onMomentumScrollEnd` event.\n   */\n\n  /**\n   * Invoke this from an `onTouchStart` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n\n  /**\n   * Invoke this from an `onTouchMove` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n\n  /**\n   * A helper function for this class that lets us quickly determine if the\n   * view is currently animating. This is particularly useful to know when\n   * a touch has just started or ended.\n   */\n\n  /**\n   * A helper function to scroll to a specific point in the scrollview.\n   * This is currently used to help focus on child textviews, but can also\n   * be used to quickly scroll to any element we want to focus. Syntax:\n   *\n   * scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n\n  /**\n   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n   * {x: number; y: number; width: number; height: number; animated: boolean = true}\n   *\n   * @platform ios\n   */\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  scrollResponderFlashScrollIndicators() {}\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {any} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n\n  /**\n   * The calculations performed here assume the scroll view takes up the entire\n   * screen - even if has some content inset. We then measure the offsets of the\n   * keyboard, and compensate both for the scroll view's \"contentInset\".\n   *\n   * @param {number} left Position of input w.r.t. table view.\n   * @param {number} top Position of input w.r.t. table view.\n   * @param {number} width Width of the text input.\n   * @param {number} height Height of the text input.\n   */\n\n  scrollResponderTextInputFocusError(e) {\n    console.error('Error measuring text field: ', e);\n  }\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` providesModule callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n\n  /**\n   * ------------------------------------------------------\n   * END SCROLLRESPONDER\n   * ------------------------------------------------------\n   */\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n\n  render() {\n    var _this$props = this.props,\n      contentContainerStyle = _this$props.contentContainerStyle,\n      horizontal = _this$props.horizontal,\n      onContentSizeChange = _this$props.onContentSizeChange,\n      refreshControl = _this$props.refreshControl,\n      stickyHeaderIndices = _this$props.stickyHeaderIndices,\n      pagingEnabled = _this$props.pagingEnabled,\n      forwardedRef = _this$props.forwardedRef,\n      keyboardDismissMode = _this$props.keyboardDismissMode,\n      onScroll = _this$props.onScroll,\n      centerContent = _this$props.centerContent,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(prop => style && style[prop] !== undefined);\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n    var contentSizeChangeProps = {};\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, (child, i) => {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n      if (child != null && (isSticky || pagingEnabled)) {\n        return /*#__PURE__*/React.createElement(View, {\n          style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = /*#__PURE__*/React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n    var scrollView = /*#__PURE__*/React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef\n    }), contentContainer);\n    if (refreshControl) {\n      return /*#__PURE__*/React.cloneElement(refreshControl, {\n        style: props.style\n      }, scrollView);\n    }\n    return scrollView;\n  }\n}\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: 'translateZ(0)',\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nvar ForwardedScrollView = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\nForwardedScrollView.displayName = 'ScrollView';\nexport default ForwardedScrollView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}