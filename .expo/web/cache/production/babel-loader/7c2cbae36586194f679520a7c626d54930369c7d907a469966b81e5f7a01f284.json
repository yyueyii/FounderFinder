{"ast":null,"code":"'use client';\"use strict\";var _reactJsxRuntime=require(\"react/jsx-runtime\");var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};Object.defineProperty(exports,\"__esModule\",{value:true});exports.sortRoutes=exports.sortRoutesWithInitial=exports.Route=exports.useContextKey=exports.useRouteNode=void 0;const react_1=__importStar(require(\"react\"));const matchers_1=require(\"./matchers\");const sortRoutes_1=require(\"./sortRoutes\");Object.defineProperty(exports,\"sortRoutesWithInitial\",{enumerable:true,get:function(){return sortRoutes_1.sortRoutesWithInitial;}});Object.defineProperty(exports,\"sortRoutes\",{enumerable:true,get:function(){return sortRoutes_1.sortRoutes;}});const CurrentRouteContext=react_1.default.createContext(null);if(false){CurrentRouteContext.displayName='RouteNode';}function useRouteNode(){return(0,react_1.useContext)(CurrentRouteContext);}exports.useRouteNode=useRouteNode;function useContextKey(){const node=useRouteNode();if(node==null){throw new Error('No filename found. This is likely a bug in expo-router.');}return(0,matchers_1.getContextKey)(node.contextKey);}exports.useContextKey=useContextKey;function Route({children,node}){return _reactJsxRuntime.jsx(CurrentRouteContext.Provider,{value:node,children:children});}exports.Route=Route;","map":{"version":3,"names":["react_1","__importStar","require","matchers_1","sortRoutes_1","Object","defineProperty","exports","enumerable","get","sortRoutesWithInitial","sortRoutes","CurrentRouteContext","default","createContext","displayName","useRouteNode","useContext","useContextKey","node","Error","getContextKey","contextKey","Route","children","_reactJsxRuntime","jsx","Provider","value"],"sources":["/Users/apple/FounderFinder/node_modules/expo-router/src/Route.tsx"],"sourcesContent":["'use client';\n\nimport React, { type PropsWithChildren, useContext } from 'react';\n\nimport type { ErrorBoundaryProps } from './exports';\nimport { getContextKey } from './matchers';\nimport { sortRoutesWithInitial, sortRoutes } from './sortRoutes';\n\nexport type DynamicConvention = { name: string; deep: boolean; notFound?: boolean };\n\nexport type LoadedRoute = {\n  ErrorBoundary?: React.ComponentType<ErrorBoundaryProps>;\n  default?: React.ComponentType<any>;\n  unstable_settings?: Record<string, any>;\n  getNavOptions?: (args: any) => any;\n  generateStaticParams?: (props: {\n    params?: Record<string, string | string[]>;\n  }) => Record<string, string | string[]>[];\n};\n\nexport type RouteNode = {\n  /** The type of RouteNode */\n  type: 'route' | 'api' | 'layout';\n  /** Load a route into memory. Returns the exports from a route. */\n  loadRoute: () => Partial<LoadedRoute>;\n  /** Loaded initial route name. */\n  initialRouteName?: string;\n  /** nested routes */\n  children: RouteNode[];\n  /** Is the route a dynamic path */\n  dynamic: null | DynamicConvention[];\n  /** `index`, `error-boundary`, etc. */\n  route: string;\n  /** Context Module ID, used for matching children. */\n  contextKey: string;\n  /** Added in-memory */\n  generated?: boolean;\n  /** Internal screens like the directory or the auto 404 should be marked as internal. */\n  internal?: boolean;\n  /** File paths for async entry modules that should be included in the initial chunk request to ensure the runtime JavaScript matches the statically rendered HTML representation. */\n  entryPoints?: string[];\n};\n\nconst CurrentRouteContext = React.createContext<RouteNode | null>(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  CurrentRouteContext.displayName = 'RouteNode';\n}\n\n/** Return the RouteNode at the current contextual boundary. */\nexport function useRouteNode(): RouteNode | null {\n  return useContext(CurrentRouteContext);\n}\n\nexport function useContextKey(): string {\n  const node = useRouteNode();\n  if (node == null) {\n    throw new Error('No filename found. This is likely a bug in expo-router.');\n  }\n  return getContextKey(node.contextKey);\n}\n\n/** Provides the matching routes and filename to the children. */\nexport function Route({ children, node }: PropsWithChildren<{ node: RouteNode }>) {\n  return <CurrentRouteContext.Provider value={node}>{children}</CurrentRouteContext.Provider>;\n}\n\nexport { sortRoutesWithInitial, sortRoutes };\n"],"mappings":"AAAA,YAAY,C,4hCAEZ,MAAAA,OAAA,CAAAC,YAAA,CAAAC,OAAA,WAGA,MAAAC,UAAA,CAAAD,OAAA,eACA,MAAAE,YAAA,CAAAF,OAAA,iBA6DSG,MAAA,CAAAC,cAAA,CAAAC,OAAA,0BAAAC,UAAA,MAAAC,GAAA,SAAAA,CAAA,QA7DA,CAAAL,YAAA,CAAAM,qBAAqB,KA6DEL,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,UAAA,MAAAC,GAAA,SAAAA,CAAA,QA7DA,CAAAL,YAAA,CAAAO,UAAU,KAqC1C,KAAM,CAAAC,mBAAmB,CAAGZ,OAAA,CAAAa,OAAK,CAACC,aAAa,CAAmB,IAAI,CAAC,CAEvE,SAA2C,CACzCF,mBAAmB,CAACG,WAAW,CAAG,WAAW,C,CAI/C,QAAgB,CAAAC,YAAYA,CAAA,EAC1B,MAAO,GAAAhB,OAAA,CAAAiB,UAAU,EAACL,mBAAmB,CAAC,CACxC,CAFAL,OAAA,CAAAS,YAAA,CAAAA,YAAA,CAIA,QAAgB,CAAAE,aAAaA,CAAA,EAC3B,KAAM,CAAAC,IAAI,CAAGH,YAAY,EAAE,CAC3B,GAAIG,IAAI,EAAI,IAAI,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yDAAyD,CAAC,C,CAE5E,MAAO,GAAAjB,UAAA,CAAAkB,aAAa,EAACF,IAAI,CAACG,UAAU,CAAC,CACvC,CANAf,OAAA,CAAAW,aAAA,CAAAA,aAAA,CASA,QAAgB,CAAAK,KAAKA,CAAC,CAAEC,QAAQ,CAAEL,IAAI,CAA0C,EAC9E,MAAO,CAAAM,gBAAA,CAAAC,GAAA,CAACd,mBAAmB,CAACe,QAAQ,EAACC,KAAK,CAAET,IAAK,CAAAK,QAAA,CAAEA,QAAQ,CAA+B,CAAC,CAC7F,CAFAjB,OAAA,CAAAgB,KAAA,CAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}