{"ast":null,"code":"import{ExecutionEnvironment}from'./Constants.types';const _sessionId=(Date.now()+'-'+Math.floor(Math.random()*1000000000)).toString();function getBrowserName(){if(typeof navigator!=='undefined'&&typeof navigator.userAgent==='string'){const agent=navigator.userAgent.toLowerCase();if(agent.includes('edge')){return'Edge';}else if(agent.includes('edg')){return'Chromium Edge';}else if(agent.includes('opr')&&!!window['opr']){return'Opera';}else if(agent.includes('chrome')&&!!window['chrome']){return'Chrome';}else if(agent.includes('trident')){return'IE';}else if(agent.includes('firefox')){return'Firefox';}else if(agent.includes('safari')){return'Safari';}}return undefined;}export default{get appOwnership(){return null;},get executionEnvironment(){return ExecutionEnvironment.Bare;},get sessionId(){return _sessionId;},get isHeadless(){if(typeof navigator==='undefined')return true;return /\\bHeadlessChrome\\//.test(navigator.userAgent);},get expoVersion(){return this.manifest.sdkVersion||null;},get linkingUri(){if(typeof location!=='undefined'){return location.origin;}else{return'';}},get expoRuntimeVersion(){return this.expoVersion;},get deviceName(){return getBrowserName();},get systemFonts(){return[];},get statusBarHeight(){return 0;},get deviceYearClass(){return null;},get manifest(){return process.env.APP_MANIFEST||{};},get manifest2(){return null;},get experienceUrl(){if(typeof location!=='undefined'){return location.origin;}else{return'';}},get debugMode(){return false;},async getWebViewUserAgentAsync(){if(typeof navigator!=='undefined'){return navigator.userAgent;}else{return null;}}};","map":{"version":3,"names":["ExecutionEnvironment","_sessionId","Date","now","Math","floor","random","toString","getBrowserName","navigator","userAgent","agent","toLowerCase","includes","window","undefined","appOwnership","executionEnvironment","Bare","sessionId","isHeadless","test","expoVersion","manifest","sdkVersion","linkingUri","location","origin","expoRuntimeVersion","deviceName","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","manifest2","experienceUrl","debugMode","getWebViewUserAgentAsync"],"sources":["/Users/apple/FounderFinder/node_modules/expo-constants/src/ExponentConstants.web.ts"],"sourcesContent":["import { ExecutionEnvironment, NativeConstants, WebManifest } from './Constants.types';\n\ndeclare let __DEV__: boolean;\ndeclare let process: { env: any };\ndeclare let navigator: Navigator;\ndeclare let location: Location;\n\nconst _sessionId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\n\nfunction getBrowserName(): string | undefined {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get isHeadless(): boolean {\n    if (typeof navigator === 'undefined') return true;\n\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n\n  get expoVersion(): string | null {\n    return (this.manifest as any)!.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (typeof location !== 'undefined') {\n      // On native this is `exp://`\n      // On web we should use the protocol and hostname (location.origin)\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config or babel-preset-expo.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2(): null {\n    return null;\n  },\n  get experienceUrl(): string {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}